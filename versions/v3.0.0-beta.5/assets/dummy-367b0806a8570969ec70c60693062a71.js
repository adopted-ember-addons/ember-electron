"use strict"
function _typeof(e){return(_typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}define("dummy/adapters/-addon-docs",["exports","ember-cli-addon-docs/adapters/-addon-docs"],(function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),Object.defineProperty(e,"default",{enumerable:!0,get:function(){return t.default}})})),define("dummy/adapters/-json-api",["exports","@ember-data/adapter/json-api"],(function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),Object.defineProperty(e,"default",{enumerable:!0,get:function(){return t.default}})})),define("dummy/adapters/class",["exports","ember-cli-addon-docs/adapters/class"],(function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),Object.defineProperty(e,"default",{enumerable:!0,get:function(){return t.default}})})),define("dummy/adapters/component",["exports","ember-cli-addon-docs/adapters/component"],(function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),Object.defineProperty(e,"default",{enumerable:!0,get:function(){return t.default}})})),define("dummy/adapters/module",["exports","ember-cli-addon-docs/adapters/module"],(function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),Object.defineProperty(e,"default",{enumerable:!0,get:function(){return t.default}})})),define("dummy/adapters/project",["exports","ember-cli-addon-docs/adapters/project"],(function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),Object.defineProperty(e,"default",{enumerable:!0,get:function(){return t.default}})})),define("dummy/app",["exports","ember-resolver","ember-load-initializers","dummy/config/environment"],(function(e,t,n,o){function r(e,t){return(r=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}function s(e){var t=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1
if(Reflect.construct.sham)return!1
if("function"==typeof Proxy)return!0
try{return Date.prototype.toString.call(Reflect.construct(Date,[],(function(){}))),!0}catch(e){return!1}}()
return function(){var n,o=d(e)
if(t){var r=d(this).constructor
n=Reflect.construct(o,arguments,r)}else n=o.apply(this,arguments)
return i(this,n)}}function i(e,t){return!t||"object"!==_typeof(t)&&"function"!=typeof t?a(e):t}function a(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called")
return e}function d(e){return(d=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}function l(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}Object.defineProperty(e,"__esModule",{value:!0}),e.default=void 0
var c=function(e){(function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function")
e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&r(e,t)})(i,Ember.Application)
var n=s(i)
function i(){var e;(function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")})(this,i)
for(var r=arguments.length,s=new Array(r),d=0;d<r;d++)s[d]=arguments[d]
return l(a(e=n.call.apply(n,[this].concat(s))),"modulePrefix",o.default.modulePrefix),l(a(e),"podModulePrefix",o.default.podModulePrefix),l(a(e),"Resolver",t.default),e}return i}()
e.default=c,(0,n.default)(c,o.default.modulePrefix)})),define("dummy/breakpoints",["exports"],(function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=void 0
e.default={mobile:"(max-width: 767px)",tablet:"(min-width: 768px) and (max-width: 991px)",desktop:"(min-width: 992px) and (max-width: 1200px)",jumbo:"(min-width: 1201px)"}})),define("dummy/component-managers/glimmer",["exports","@glimmer/component/-private/ember-component-manager"],(function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),Object.defineProperty(e,"default",{enumerable:!0,get:function(){return t.default}})})),define("dummy/components/-lf-get-outlet-state",["exports","liquid-fire/components/-lf-get-outlet-state"],(function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),Object.defineProperty(e,"default",{enumerable:!0,get:function(){return t.default}})})),define("dummy/components/api/x-class",["exports","ember-cli-addon-docs/components/api/x-class/component"],(function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),Object.defineProperty(e,"default",{enumerable:!0,get:function(){return t.default}})})),define("dummy/components/api/x-component",["exports","ember-cli-addon-docs/components/api/x-component/component"],(function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),Object.defineProperty(e,"default",{enumerable:!0,get:function(){return t.default}})})),define("dummy/components/api/x-import-path",["exports","ember-cli-addon-docs/components/api/x-import-path/component"],(function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),Object.defineProperty(e,"default",{enumerable:!0,get:function(){return t.default}})})),define("dummy/components/api/x-meta-panel",["exports","ember-cli-addon-docs/components/api/x-meta-panel/component"],(function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),Object.defineProperty(e,"default",{enumerable:!0,get:function(){return t.default}})})),define("dummy/components/api/x-meta-panel/header",["exports","ember-cli-addon-docs/components/api/x-meta-panel/header/component"],(function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),Object.defineProperty(e,"default",{enumerable:!0,get:function(){return t.default}})})),define("dummy/components/api/x-module",["exports","ember-cli-addon-docs/components/api/x-module/component"],(function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),Object.defineProperty(e,"default",{enumerable:!0,get:function(){return t.default}})})),define("dummy/components/api/x-section",["exports","ember-cli-addon-docs/components/api/x-section/component"],(function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),Object.defineProperty(e,"default",{enumerable:!0,get:function(){return t.default}})})),define("dummy/components/api/x-sections",["exports","ember-cli-addon-docs/components/api/x-sections/component"],(function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),Object.defineProperty(e,"default",{enumerable:!0,get:function(){return t.default}})})),define("dummy/components/api/x-toggles",["exports","ember-cli-addon-docs/components/api/x-toggles/component"],(function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),Object.defineProperty(e,"default",{enumerable:!0,get:function(){return t.default}})})),define("dummy/components/copy-button",["exports","ember-cli-clipboard/components/copy-button"],(function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),Object.defineProperty(e,"default",{enumerable:!0,get:function(){return t.default}})})),define("dummy/components/docs-code-highlight",["exports","ember-cli-addon-docs/components/docs-code-highlight/component"],(function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),Object.defineProperty(e,"default",{enumerable:!0,get:function(){return t.default}})})),define("dummy/components/docs-demo",["exports","ember-cli-addon-docs/components/docs-demo/component"],(function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),Object.defineProperty(e,"default",{enumerable:!0,get:function(){return t.default}})})),define("dummy/components/docs-demo/x-example",["exports","ember-cli-addon-docs/components/docs-demo/x-example/component"],(function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),Object.defineProperty(e,"default",{enumerable:!0,get:function(){return t.default}})})),define("dummy/components/docs-demo/x-snippet",["exports","ember-cli-addon-docs/components/docs-demo/x-snippet/component"],(function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),Object.defineProperty(e,"default",{enumerable:!0,get:function(){return t.default}})})),define("dummy/components/docs-header",["exports","ember-cli-addon-docs/components/docs-header/component"],(function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),Object.defineProperty(e,"default",{enumerable:!0,get:function(){return t.default}})})),define("dummy/components/docs-header/link",["exports","ember-cli-addon-docs/components/docs-header/link/component"],(function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),Object.defineProperty(e,"default",{enumerable:!0,get:function(){return t.default}})})),define("dummy/components/docs-header/search-box",["exports","ember-cli-addon-docs/components/docs-header/search-box/component"],(function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),Object.defineProperty(e,"default",{enumerable:!0,get:function(){return t.default}})})),define("dummy/components/docs-header/search-result",["exports","ember-cli-addon-docs/components/docs-header/search-result/component"],(function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),Object.defineProperty(e,"default",{enumerable:!0,get:function(){return t.default}})})),define("dummy/components/docs-header/search-results",["exports","ember-cli-addon-docs/components/docs-header/search-results/component"],(function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),Object.defineProperty(e,"default",{enumerable:!0,get:function(){return t.default}})})),define("dummy/components/docs-header/version-selector",["exports","ember-cli-addon-docs/components/docs-header/version-selector/component"],(function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),Object.defineProperty(e,"default",{enumerable:!0,get:function(){return t.default}})}))
define("dummy/components/docs-hero",["exports","ember-cli-addon-docs/components/docs-hero/component"],(function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),Object.defineProperty(e,"default",{enumerable:!0,get:function(){return t.default}})})),define("dummy/components/docs-keyboard-shortcuts",["exports","ember-cli-addon-docs/components/docs-keyboard-shortcuts/component"],(function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),Object.defineProperty(e,"default",{enumerable:!0,get:function(){return t.default}})})),define("dummy/components/docs-link",["exports","ember-cli-addon-docs/components/docs-link/component"],(function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),Object.defineProperty(e,"default",{enumerable:!0,get:function(){return t.default}})})),define("dummy/components/docs-logo",["exports","ember-cli-addon-docs/components/docs-logo/component"],(function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),Object.defineProperty(e,"default",{enumerable:!0,get:function(){return t.default}})})),define("dummy/components/docs-snippet",["exports","ember-cli-addon-docs/components/docs-snippet/component"],(function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),Object.defineProperty(e,"default",{enumerable:!0,get:function(){return t.default}})})),define("dummy/components/docs-svg-icon",["exports","ember-cli-addon-docs/components/docs-svg-icon/component"],(function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),Object.defineProperty(e,"default",{enumerable:!0,get:function(){return t.default}})})),define("dummy/components/docs-viewer",["exports","ember-cli-addon-docs/components/docs-viewer/component"],(function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),Object.defineProperty(e,"default",{enumerable:!0,get:function(){return t.default}})})),define("dummy/components/docs-viewer/x-autogenerated-api-docs",["exports","ember-cli-addon-docs/components/docs-viewer/x-autogenerated-api-docs/component"],(function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),Object.defineProperty(e,"default",{enumerable:!0,get:function(){return t.default}})})),define("dummy/components/docs-viewer/x-autogenerated-api-docs/module-nav",["exports","ember-cli-addon-docs/components/docs-viewer/x-autogenerated-api-docs/module-nav/component"],(function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),Object.defineProperty(e,"default",{enumerable:!0,get:function(){return t.default}})})),define("dummy/components/docs-viewer/x-current-page-index",["exports","ember-cli-addon-docs/components/docs-viewer/x-current-page-index/component"],(function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),Object.defineProperty(e,"default",{enumerable:!0,get:function(){return t.default}})})),define("dummy/components/docs-viewer/x-main",["exports","ember-cli-addon-docs/components/docs-viewer/x-main/component"],(function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),Object.defineProperty(e,"default",{enumerable:!0,get:function(){return t.default}})})),define("dummy/components/docs-viewer/x-nav-item",["exports","ember-cli-addon-docs/components/docs-viewer/x-nav-item/component"],(function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),Object.defineProperty(e,"default",{enumerable:!0,get:function(){return t.default}})})),define("dummy/components/docs-viewer/x-nav-list",["exports","ember-cli-addon-docs/components/docs-viewer/x-nav-list/component"],(function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),Object.defineProperty(e,"default",{enumerable:!0,get:function(){return t.default}})})),define("dummy/components/docs-viewer/x-nav",["exports","ember-cli-addon-docs/components/docs-viewer/x-nav/component"],(function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),Object.defineProperty(e,"default",{enumerable:!0,get:function(){return t.default}})})),define("dummy/components/docs-viewer/x-section",["exports","ember-cli-addon-docs/components/docs-viewer/x-section/component"],(function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),Object.defineProperty(e,"default",{enumerable:!0,get:function(){return t.default}})})),define("dummy/components/ember-modal-dialog-positioned-container",["exports","ember-modal-dialog/components/positioned-container"],(function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),Object.defineProperty(e,"default",{enumerable:!0,get:function(){return t.default}})})),define("dummy/components/ember-modal-dialog/-basic-dialog",["exports","ember-modal-dialog/components/basic-dialog"],(function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),Object.defineProperty(e,"default",{enumerable:!0,get:function(){return t.default}})})),define("dummy/components/ember-modal-dialog/-in-place-dialog",["exports","ember-modal-dialog/components/in-place-dialog"],(function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),Object.defineProperty(e,"default",{enumerable:!0,get:function(){return t.default}})})),define("dummy/components/ember-modal-dialog/-liquid-dialog",["exports","ember-modal-dialog/components/liquid-dialog"],(function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),Object.defineProperty(e,"default",{enumerable:!0,get:function(){return t.default}})})),define("dummy/components/ember-modal-dialog/-liquid-tether-dialog",["exports","ember-modal-dialog/components/liquid-tether-dialog"],(function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),Object.defineProperty(e,"default",{enumerable:!0,get:function(){return t.default}})})),define("dummy/components/ember-modal-dialog/-tether-dialog",["exports","ember-modal-dialog/components/tether-dialog"],(function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),Object.defineProperty(e,"default",{enumerable:!0,get:function(){return t.default}})})),define("dummy/components/ember-tether",["exports","ember-tether/components/ember-tether"],(function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),Object.defineProperty(e,"default",{enumerable:!0,get:function(){return t.default}})})),define("dummy/components/ember-wormhole",["exports","ember-wormhole/components/ember-wormhole"],(function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),Object.defineProperty(e,"default",{enumerable:!0,get:function(){return t.default}})})),define("dummy/components/illiquid-model",["exports","liquid-fire/components/illiquid-model"],(function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),Object.defineProperty(e,"default",{enumerable:!0,get:function(){return t.default}})})),define("dummy/components/keyboard-press",["exports","ember-keyboard/deprecated/components/keyboard-press"],(function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),Object.defineProperty(e,"default",{enumerable:!0,get:function(){return t.default}})})),define("dummy/components/liquid-bind",["exports","liquid-fire/components/liquid-bind"],(function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),Object.defineProperty(e,"default",{enumerable:!0,get:function(){return t.default}})})),define("dummy/components/liquid-child",["exports","liquid-fire/components/liquid-child"],(function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),Object.defineProperty(e,"default",{enumerable:!0,get:function(){return t.default}})})),define("dummy/components/liquid-container",["exports","liquid-fire/components/liquid-container"],(function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),Object.defineProperty(e,"default",{enumerable:!0,get:function(){return t.default}})})),define("dummy/components/liquid-if",["exports","liquid-fire/components/liquid-if"],(function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),Object.defineProperty(e,"default",{enumerable:!0,get:function(){return t.default}})})),define("dummy/components/liquid-measured",["exports","liquid-fire/components/liquid-measured"],(function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),Object.defineProperty(e,"default",{enumerable:!0,get:function(){return t.default}}),Object.defineProperty(e,"measure",{enumerable:!0,get:function(){return t.measure}})}))
define("dummy/components/liquid-outlet",["exports","liquid-fire/components/liquid-outlet"],(function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),Object.defineProperty(e,"default",{enumerable:!0,get:function(){return t.default}})})),define("dummy/components/liquid-spacer",["exports","liquid-fire/components/liquid-spacer"],(function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),Object.defineProperty(e,"default",{enumerable:!0,get:function(){return t.default}})})),define("dummy/components/liquid-sync",["exports","liquid-fire/components/liquid-sync"],(function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),Object.defineProperty(e,"default",{enumerable:!0,get:function(){return t.default}})})),define("dummy/components/liquid-unless",["exports","liquid-fire/components/liquid-unless"],(function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),Object.defineProperty(e,"default",{enumerable:!0,get:function(){return t.default}})})),define("dummy/components/liquid-versions",["exports","liquid-fire/components/liquid-versions"],(function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),Object.defineProperty(e,"default",{enumerable:!0,get:function(){return t.default}})})),define("dummy/components/modal-dialog",["exports","ember-cli-addon-docs/components/modal-dialog/component"],(function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),Object.defineProperty(e,"default",{enumerable:!0,get:function(){return t.default}})})),define("dummy/controllers/docs/api/class",["exports","ember-cli-addon-docs/controllers/docs/api/class"],(function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),Object.defineProperty(e,"default",{enumerable:!0,get:function(){return t.default}})})),define("dummy/data-adapter",["exports","@ember-data/debug"],(function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),Object.defineProperty(e,"default",{enumerable:!0,get:function(){return t.default}})})),define("dummy/helpers/and",["exports","ember-truth-helpers/helpers/and"],(function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),Object.defineProperty(e,"default",{enumerable:!0,get:function(){return t.default}}),Object.defineProperty(e,"and",{enumerable:!0,get:function(){return t.and}})})),define("dummy/helpers/append",["exports","ember-composable-helpers/helpers/append"],(function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),Object.defineProperty(e,"default",{enumerable:!0,get:function(){return t.default}}),Object.defineProperty(e,"append",{enumerable:!0,get:function(){return t.append}})})),define("dummy/helpers/break-on",["exports","ember-cli-addon-docs/helpers/break-on"],(function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),Object.defineProperty(e,"default",{enumerable:!0,get:function(){return t.default}})})),define("dummy/helpers/call",["exports","ember-composable-helpers/helpers/call"],(function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),Object.defineProperty(e,"default",{enumerable:!0,get:function(){return t.default}}),Object.defineProperty(e,"call",{enumerable:!0,get:function(){return t.call}})})),define("dummy/helpers/camelize",["exports","ember-cli-string-helpers/helpers/camelize"],(function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),Object.defineProperty(e,"default",{enumerable:!0,get:function(){return t.default}}),Object.defineProperty(e,"camelize",{enumerable:!0,get:function(){return t.camelize}})})),define("dummy/helpers/cancel-all",["exports","ember-concurrency/helpers/cancel-all"],(function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),Object.defineProperty(e,"default",{enumerable:!0,get:function(){return t.default}})})),define("dummy/helpers/capitalize",["exports","ember-cli-string-helpers/helpers/capitalize"],(function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),Object.defineProperty(e,"default",{enumerable:!0,get:function(){return t.default}}),Object.defineProperty(e,"capitalize",{enumerable:!0,get:function(){return t.capitalize}})})),define("dummy/helpers/chunk",["exports","ember-composable-helpers/helpers/chunk"],(function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),Object.defineProperty(e,"default",{enumerable:!0,get:function(){return t.default}}),Object.defineProperty(e,"chunk",{enumerable:!0,get:function(){return t.chunk}})})),define("dummy/helpers/classify",["exports","ember-cli-string-helpers/helpers/classify"],(function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),Object.defineProperty(e,"default",{enumerable:!0,get:function(){return t.default}}),Object.defineProperty(e,"classify",{enumerable:!0,get:function(){return t.classify}})})),define("dummy/helpers/compact",["exports","ember-composable-helpers/helpers/compact"],(function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),Object.defineProperty(e,"default",{enumerable:!0,get:function(){return t.default}})})),define("dummy/helpers/compute",["exports","ember-composable-helpers/helpers/compute"],(function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),Object.defineProperty(e,"default",{enumerable:!0,get:function(){return t.default}}),Object.defineProperty(e,"compute",{enumerable:!0,get:function(){return t.compute}})})),define("dummy/helpers/contains",["exports","ember-composable-helpers/helpers/contains"],(function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),Object.defineProperty(e,"default",{enumerable:!0,get:function(){return t.default}}),Object.defineProperty(e,"contains",{enumerable:!0,get:function(){return t.contains}})})),define("dummy/helpers/dasherize",["exports","ember-cli-string-helpers/helpers/dasherize"],(function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),Object.defineProperty(e,"default",{enumerable:!0,get:function(){return t.default}}),Object.defineProperty(e,"dasherize",{enumerable:!0,get:function(){return t.dasherize}})})),define("dummy/helpers/dec",["exports","ember-composable-helpers/helpers/dec"],(function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),Object.defineProperty(e,"default",{enumerable:!0,get:function(){return t.default}}),Object.defineProperty(e,"dec",{enumerable:!0,get:function(){return t.dec}})})),define("dummy/helpers/drop",["exports","ember-composable-helpers/helpers/drop"],(function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),Object.defineProperty(e,"default",{enumerable:!0,get:function(){return t.default}})})),define("dummy/helpers/entries",["exports","ember-composable-helpers/helpers/entries"],(function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),Object.defineProperty(e,"default",{enumerable:!0,get:function(){return t.default}}),Object.defineProperty(e,"entries",{enumerable:!0,get:function(){return t.entries}})})),define("dummy/helpers/eq",["exports","ember-truth-helpers/helpers/equal"],(function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),Object.defineProperty(e,"default",{enumerable:!0,get:function(){return t.default}}),Object.defineProperty(e,"equal",{enumerable:!0,get:function(){return t.equal}})})),define("dummy/helpers/filter-by",["exports","ember-composable-helpers/helpers/filter-by"],(function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),Object.defineProperty(e,"default",{enumerable:!0,get:function(){return t.default}})})),define("dummy/helpers/filter",["exports","ember-composable-helpers/helpers/filter"],(function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),Object.defineProperty(e,"default",{enumerable:!0,get:function(){return t.default}})})),define("dummy/helpers/find-by",["exports","ember-composable-helpers/helpers/find-by"],(function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),Object.defineProperty(e,"default",{enumerable:!0,get:function(){return t.default}})})),define("dummy/helpers/flatten",["exports","ember-composable-helpers/helpers/flatten"],(function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),Object.defineProperty(e,"default",{enumerable:!0,get:function(){return t.default}}),Object.defineProperty(e,"flatten",{enumerable:!0,get:function(){return t.flatten}})})),define("dummy/helpers/from-entries",["exports","ember-composable-helpers/helpers/from-entries"],(function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),Object.defineProperty(e,"default",{enumerable:!0,get:function(){return t.default}}),Object.defineProperty(e,"fromEntries",{enumerable:!0,get:function(){return t.fromEntries}})}))
define("dummy/helpers/get-code-snippet",["exports","ember-code-snippet/helpers/get-code-snippet"],(function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),Object.defineProperty(e,"default",{enumerable:!0,get:function(){return t.default}})})),define("dummy/helpers/group-by",["exports","ember-composable-helpers/helpers/group-by"],(function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),Object.defineProperty(e,"default",{enumerable:!0,get:function(){return t.default}})})),define("dummy/helpers/gt",["exports","ember-truth-helpers/helpers/gt"],(function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),Object.defineProperty(e,"default",{enumerable:!0,get:function(){return t.default}}),Object.defineProperty(e,"gt",{enumerable:!0,get:function(){return t.gt}})})),define("dummy/helpers/gte",["exports","ember-truth-helpers/helpers/gte"],(function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),Object.defineProperty(e,"default",{enumerable:!0,get:function(){return t.default}}),Object.defineProperty(e,"gte",{enumerable:!0,get:function(){return t.gte}})})),define("dummy/helpers/has-next",["exports","ember-composable-helpers/helpers/has-next"],(function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),Object.defineProperty(e,"default",{enumerable:!0,get:function(){return t.default}}),Object.defineProperty(e,"hasNext",{enumerable:!0,get:function(){return t.hasNext}})})),define("dummy/helpers/has-previous",["exports","ember-composable-helpers/helpers/has-previous"],(function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),Object.defineProperty(e,"default",{enumerable:!0,get:function(){return t.default}}),Object.defineProperty(e,"hasPrevious",{enumerable:!0,get:function(){return t.hasPrevious}})})),define("dummy/helpers/href-to",["exports","ember-href-to/helpers/href-to"],(function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),Object.defineProperty(e,"default",{enumerable:!0,get:function(){return t.default}}),Object.defineProperty(e,"hrefTo",{enumerable:!0,get:function(){return t.hrefTo}})})),define("dummy/helpers/html-safe",["exports","ember-cli-string-helpers/helpers/html-safe"],(function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),Object.defineProperty(e,"default",{enumerable:!0,get:function(){return t.default}}),Object.defineProperty(e,"htmlSafe",{enumerable:!0,get:function(){return t.htmlSafe}})})),define("dummy/helpers/humanize",["exports","ember-cli-string-helpers/helpers/humanize"],(function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),Object.defineProperty(e,"default",{enumerable:!0,get:function(){return t.default}}),Object.defineProperty(e,"humanize",{enumerable:!0,get:function(){return t.humanize}})})),define("dummy/helpers/if-key",["exports","ember-keyboard/helpers/if-key"],(function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),Object.defineProperty(e,"default",{enumerable:!0,get:function(){return t.default}}),Object.defineProperty(e,"ifKey",{enumerable:!0,get:function(){return t.ifKey}})})),define("dummy/helpers/ignore-children",["exports","ember-ignore-children-helper/helpers/ignore-children"],(function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),Object.defineProperty(e,"default",{enumerable:!0,get:function(){return t.default}}),Object.defineProperty(e,"ignoreChildren",{enumerable:!0,get:function(){return t.ignoreChildren}})})),define("dummy/helpers/inc",["exports","ember-composable-helpers/helpers/inc"],(function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),Object.defineProperty(e,"default",{enumerable:!0,get:function(){return t.default}}),Object.defineProperty(e,"inc",{enumerable:!0,get:function(){return t.inc}})})),define("dummy/helpers/includes",["exports","ember-composable-helpers/helpers/includes"],(function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),Object.defineProperty(e,"default",{enumerable:!0,get:function(){return t.default}}),Object.defineProperty(e,"includes",{enumerable:!0,get:function(){return t.includes}})})),define("dummy/helpers/intersect",["exports","ember-composable-helpers/helpers/intersect"],(function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),Object.defineProperty(e,"default",{enumerable:!0,get:function(){return t.default}})})),define("dummy/helpers/invoke",["exports","ember-composable-helpers/helpers/invoke"],(function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),Object.defineProperty(e,"default",{enumerable:!0,get:function(){return t.default}}),Object.defineProperty(e,"invoke",{enumerable:!0,get:function(){return t.invoke}})})),define("dummy/helpers/is-array",["exports","ember-truth-helpers/helpers/is-array"],(function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),Object.defineProperty(e,"default",{enumerable:!0,get:function(){return t.default}}),Object.defineProperty(e,"isArray",{enumerable:!0,get:function(){return t.isArray}})})),define("dummy/helpers/is-clipboard-supported",["exports","ember-cli-clipboard/helpers/is-clipboard-supported"],(function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),Object.defineProperty(e,"default",{enumerable:!0,get:function(){return t.default}}),Object.defineProperty(e,"isClipboardSupported",{enumerable:!0,get:function(){return t.isClipboardSupported}})})),define("dummy/helpers/is-empty",["exports","ember-truth-helpers/helpers/is-empty"],(function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),Object.defineProperty(e,"default",{enumerable:!0,get:function(){return t.default}})})),define("dummy/helpers/is-equal",["exports","ember-truth-helpers/helpers/is-equal"],(function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),Object.defineProperty(e,"default",{enumerable:!0,get:function(){return t.default}}),Object.defineProperty(e,"isEqual",{enumerable:!0,get:function(){return t.isEqual}})})),define("dummy/helpers/join",["exports","ember-composable-helpers/helpers/join"],(function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),Object.defineProperty(e,"default",{enumerable:!0,get:function(){return t.default}})})),define("dummy/helpers/keys",["exports","ember-composable-helpers/helpers/keys"],(function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),Object.defineProperty(e,"default",{enumerable:!0,get:function(){return t.default}}),Object.defineProperty(e,"keys",{enumerable:!0,get:function(){return t.keys}})})),define("dummy/helpers/lf-lock-model",["exports","liquid-fire/helpers/lf-lock-model"],(function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),Object.defineProperty(e,"default",{enumerable:!0,get:function(){return t.default}}),Object.defineProperty(e,"lfLockModel",{enumerable:!0,get:function(){return t.lfLockModel}})})),define("dummy/helpers/lf-or",["exports","liquid-fire/helpers/lf-or"],(function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),Object.defineProperty(e,"default",{enumerable:!0,get:function(){return t.default}}),Object.defineProperty(e,"lfOr",{enumerable:!0,get:function(){return t.lfOr}})})),define("dummy/helpers/loc",["exports","@ember/string/helpers/loc"],(function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),Object.defineProperty(e,"default",{enumerable:!0,get:function(){return t.default}}),Object.defineProperty(e,"loc",{enumerable:!0,get:function(){return t.loc}})})),define("dummy/helpers/lowercase",["exports","ember-cli-string-helpers/helpers/lowercase"],(function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),Object.defineProperty(e,"default",{enumerable:!0,get:function(){return t.default}}),Object.defineProperty(e,"lowercase",{enumerable:!0,get:function(){return t.lowercase}})})),define("dummy/helpers/lt",["exports","ember-truth-helpers/helpers/lt"],(function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),Object.defineProperty(e,"default",{enumerable:!0,get:function(){return t.default}}),Object.defineProperty(e,"lt",{enumerable:!0,get:function(){return t.lt}})})),define("dummy/helpers/lte",["exports","ember-truth-helpers/helpers/lte"],(function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),Object.defineProperty(e,"default",{enumerable:!0,get:function(){return t.default}}),Object.defineProperty(e,"lte",{enumerable:!0,get:function(){return t.lte}})})),define("dummy/helpers/map-by",["exports","ember-composable-helpers/helpers/map-by"],(function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),Object.defineProperty(e,"default",{enumerable:!0,get:function(){return t.default}})})),define("dummy/helpers/map",["exports","ember-composable-helpers/helpers/map"],(function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),Object.defineProperty(e,"default",{enumerable:!0,get:function(){return t.default}})})),define("dummy/helpers/media",["exports","ember-responsive/helpers/media"],(function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),Object.defineProperty(e,"default",{enumerable:!0,get:function(){return t.default}}),Object.defineProperty(e,"media",{enumerable:!0,get:function(){return t.media}})}))
define("dummy/helpers/next",["exports","ember-composable-helpers/helpers/next"],(function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),Object.defineProperty(e,"default",{enumerable:!0,get:function(){return t.default}}),Object.defineProperty(e,"next",{enumerable:!0,get:function(){return t.next}})})),define("dummy/helpers/noop",["exports","ember-composable-helpers/helpers/noop"],(function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),Object.defineProperty(e,"default",{enumerable:!0,get:function(){return t.default}}),Object.defineProperty(e,"noop",{enumerable:!0,get:function(){return t.noop}})})),define("dummy/helpers/not-eq",["exports","ember-truth-helpers/helpers/not-equal"],(function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),Object.defineProperty(e,"default",{enumerable:!0,get:function(){return t.default}}),Object.defineProperty(e,"notEqualHelper",{enumerable:!0,get:function(){return t.notEqualHelper}})})),define("dummy/helpers/not",["exports","ember-truth-helpers/helpers/not"],(function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),Object.defineProperty(e,"default",{enumerable:!0,get:function(){return t.default}}),Object.defineProperty(e,"not",{enumerable:!0,get:function(){return t.not}})})),define("dummy/helpers/object-at",["exports","ember-composable-helpers/helpers/object-at"],(function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),Object.defineProperty(e,"default",{enumerable:!0,get:function(){return t.default}}),Object.defineProperty(e,"objectAt",{enumerable:!0,get:function(){return t.objectAt}})})),define("dummy/helpers/on-key",["exports","ember-keyboard/helpers/on-key"],(function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),Object.defineProperty(e,"default",{enumerable:!0,get:function(){return t.default}})})),define("dummy/helpers/optional",["exports","ember-composable-helpers/helpers/optional"],(function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),Object.defineProperty(e,"default",{enumerable:!0,get:function(){return t.default}}),Object.defineProperty(e,"optional",{enumerable:!0,get:function(){return t.optional}})})),define("dummy/helpers/or",["exports","ember-truth-helpers/helpers/or"],(function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),Object.defineProperty(e,"default",{enumerable:!0,get:function(){return t.default}}),Object.defineProperty(e,"or",{enumerable:!0,get:function(){return t.or}})})),define("dummy/helpers/perform",["exports","ember-concurrency/helpers/perform"],(function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),Object.defineProperty(e,"default",{enumerable:!0,get:function(){return t.default}})})),define("dummy/helpers/pick",["exports","ember-composable-helpers/helpers/pick"],(function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),Object.defineProperty(e,"default",{enumerable:!0,get:function(){return t.default}}),Object.defineProperty(e,"pick",{enumerable:!0,get:function(){return t.pick}})})),define("dummy/helpers/pipe-action",["exports","ember-composable-helpers/helpers/pipe-action"],(function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),Object.defineProperty(e,"default",{enumerable:!0,get:function(){return t.default}})})),define("dummy/helpers/pipe",["exports","ember-composable-helpers/helpers/pipe"],(function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),Object.defineProperty(e,"default",{enumerable:!0,get:function(){return t.default}}),Object.defineProperty(e,"pipe",{enumerable:!0,get:function(){return t.pipe}})})),define("dummy/helpers/pluralize",["exports","ember-inflector/lib/helpers/pluralize"],(function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),e.default=void 0
var n=t.default
e.default=n})),define("dummy/helpers/prevent-default",["exports","ember-on-modifier/helpers/prevent-default"],(function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),Object.defineProperty(e,"default",{enumerable:!0,get:function(){return t.default}}),Object.defineProperty(e,"preventDefault",{enumerable:!0,get:function(){return t.preventDefault}})})),define("dummy/helpers/previous",["exports","ember-composable-helpers/helpers/previous"],(function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),Object.defineProperty(e,"default",{enumerable:!0,get:function(){return t.default}}),Object.defineProperty(e,"previous",{enumerable:!0,get:function(){return t.previous}})})),define("dummy/helpers/queue",["exports","ember-composable-helpers/helpers/queue"],(function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),Object.defineProperty(e,"default",{enumerable:!0,get:function(){return t.default}}),Object.defineProperty(e,"queue",{enumerable:!0,get:function(){return t.queue}})})),define("dummy/helpers/range",["exports","ember-composable-helpers/helpers/range"],(function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),Object.defineProperty(e,"default",{enumerable:!0,get:function(){return t.default}}),Object.defineProperty(e,"range",{enumerable:!0,get:function(){return t.range}})})),define("dummy/helpers/reduce",["exports","ember-composable-helpers/helpers/reduce"],(function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),Object.defineProperty(e,"default",{enumerable:!0,get:function(){return t.default}})})),define("dummy/helpers/reject-by",["exports","ember-composable-helpers/helpers/reject-by"],(function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),Object.defineProperty(e,"default",{enumerable:!0,get:function(){return t.default}})})),define("dummy/helpers/repeat",["exports","ember-composable-helpers/helpers/repeat"],(function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),Object.defineProperty(e,"default",{enumerable:!0,get:function(){return t.default}}),Object.defineProperty(e,"repeat",{enumerable:!0,get:function(){return t.repeat}})})),define("dummy/helpers/reverse",["exports","ember-composable-helpers/helpers/reverse"],(function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),Object.defineProperty(e,"default",{enumerable:!0,get:function(){return t.default}})})),define("dummy/helpers/route-idle",["exports","ember-app-scheduler/helpers/route-idle"],(function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),Object.defineProperty(e,"default",{enumerable:!0,get:function(){return t.default}}),Object.defineProperty(e,"routeIdle",{enumerable:!0,get:function(){return t.routeIdle}})})),define("dummy/helpers/shuffle",["exports","ember-composable-helpers/helpers/shuffle"],(function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),Object.defineProperty(e,"default",{enumerable:!0,get:function(){return t.default}}),Object.defineProperty(e,"shuffle",{enumerable:!0,get:function(){return t.shuffle}})})),define("dummy/helpers/singularize",["exports","ember-inflector/lib/helpers/singularize"],(function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),e.default=void 0
var n=t.default
e.default=n})),define("dummy/helpers/slice",["exports","ember-composable-helpers/helpers/slice"],(function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),Object.defineProperty(e,"default",{enumerable:!0,get:function(){return t.default}})})),define("dummy/helpers/sort-by",["exports","ember-composable-helpers/helpers/sort-by"],(function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),Object.defineProperty(e,"default",{enumerable:!0,get:function(){return t.default}})})),define("dummy/helpers/svg-jar",["exports","ember-svg-jar/utils/make-helper","ember-svg-jar/utils/make-svg"],(function(e,t,n){function o(e){try{return require("ember-svg-jar/inlined/".concat(e)).default}catch(t){return null}}function r(e,t){return(0,n.default)(e,t,o)}Object.defineProperty(e,"__esModule",{value:!0}),e.svgJar=r,e.default=void 0
var s=(0,t.default)(r)
e.default=s})),define("dummy/helpers/take",["exports","ember-composable-helpers/helpers/take"],(function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),Object.defineProperty(e,"default",{enumerable:!0,get:function(){return t.default}})})),define("dummy/helpers/task",["exports","ember-concurrency/helpers/task"],(function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),Object.defineProperty(e,"default",{enumerable:!0,get:function(){return t.default}})})),define("dummy/helpers/titleize",["exports","ember-cli-string-helpers/helpers/titleize"],(function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),Object.defineProperty(e,"default",{enumerable:!0,get:function(){return t.default}}),Object.defineProperty(e,"titleize",{enumerable:!0,get:function(){return t.titleize}})}))
function _typeof(e){return(_typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}define("dummy/helpers/toggle-action",["exports","ember-composable-helpers/helpers/toggle-action"],(function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),Object.defineProperty(e,"default",{enumerable:!0,get:function(){return t.default}})})),define("dummy/helpers/toggle",["exports","ember-composable-helpers/helpers/toggle"],(function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),Object.defineProperty(e,"default",{enumerable:!0,get:function(){return t.default}}),Object.defineProperty(e,"toggle",{enumerable:!0,get:function(){return t.toggle}})})),define("dummy/helpers/trim",["exports","ember-cli-string-helpers/helpers/trim"],(function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),Object.defineProperty(e,"default",{enumerable:!0,get:function(){return t.default}}),Object.defineProperty(e,"trim",{enumerable:!0,get:function(){return t.trim}})})),define("dummy/helpers/truncate",["exports","ember-cli-string-helpers/helpers/truncate"],(function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),Object.defineProperty(e,"default",{enumerable:!0,get:function(){return t.default}}),Object.defineProperty(e,"truncate",{enumerable:!0,get:function(){return t.truncate}})})),define("dummy/helpers/type-signature",["exports","ember-cli-addon-docs/helpers/type-signature"],(function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),Object.defineProperty(e,"default",{enumerable:!0,get:function(){return t.default}})})),define("dummy/helpers/underscore",["exports","ember-cli-string-helpers/helpers/underscore"],(function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),Object.defineProperty(e,"default",{enumerable:!0,get:function(){return t.default}}),Object.defineProperty(e,"underscore",{enumerable:!0,get:function(){return t.underscore}})})),define("dummy/helpers/union",["exports","ember-composable-helpers/helpers/union"],(function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),Object.defineProperty(e,"default",{enumerable:!0,get:function(){return t.default}})})),define("dummy/helpers/uppercase",["exports","ember-cli-string-helpers/helpers/uppercase"],(function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),Object.defineProperty(e,"default",{enumerable:!0,get:function(){return t.default}}),Object.defineProperty(e,"uppercase",{enumerable:!0,get:function(){return t.uppercase}})})),define("dummy/helpers/values",["exports","ember-composable-helpers/helpers/values"],(function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),Object.defineProperty(e,"default",{enumerable:!0,get:function(){return t.default}}),Object.defineProperty(e,"values",{enumerable:!0,get:function(){return t.values}})})),define("dummy/helpers/w",["exports","ember-cli-string-helpers/helpers/w"],(function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),Object.defineProperty(e,"default",{enumerable:!0,get:function(){return t.default}}),Object.defineProperty(e,"w",{enumerable:!0,get:function(){return t.w}})})),define("dummy/helpers/without",["exports","ember-composable-helpers/helpers/without"],(function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),Object.defineProperty(e,"default",{enumerable:!0,get:function(){return t.default}}),Object.defineProperty(e,"without",{enumerable:!0,get:function(){return t.without}})})),define("dummy/helpers/xor",["exports","ember-truth-helpers/helpers/xor"],(function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),Object.defineProperty(e,"default",{enumerable:!0,get:function(){return t.default}}),Object.defineProperty(e,"xor",{enumerable:!0,get:function(){return t.xor}})})),define("dummy/initializers/add-modals-container",["exports","ember-modal-dialog/initializers/add-modals-container"],(function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),e.default=void 0
var n={name:"add-modals-container",initialize:t.default}
e.default=n})),define("dummy/initializers/container-debug-adapter",["exports","ember-resolver/resolvers/classic/container-debug-adapter"],(function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),e.default=void 0
var n={name:"container-debug-adapter",initialize:function(){var e=arguments[1]||arguments[0]
e.register("container-debug-adapter:main",t.default),e.inject("container-debug-adapter:main","namespace","application:main")}}
e.default=n})),define("dummy/initializers/ember-concurrency",["exports","ember-concurrency/initializers/ember-concurrency"],(function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),Object.defineProperty(e,"default",{enumerable:!0,get:function(){return t.default}})})),define("dummy/initializers/ember-data-data-adapter",["exports","@ember-data/debug/setup"],(function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),Object.defineProperty(e,"default",{enumerable:!0,get:function(){return t.default}})})),define("dummy/initializers/ember-data",["exports","ember-data","ember-data/setup-container"],(function(e,t,n){Object.defineProperty(e,"__esModule",{value:!0}),e.default=void 0
var o={name:"ember-data",initialize:n.default}
e.default=o})),define("dummy/initializers/ember-keyboard-first-responder-inputs",["exports","ember-keyboard/initializers/ember-keyboard-first-responder-inputs"],(function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),Object.defineProperty(e,"default",{enumerable:!0,get:function(){return t.default}}),Object.defineProperty(e,"initialize",{enumerable:!0,get:function(){return t.initialize}})})),define("dummy/initializers/ember-responsive-breakpoints",["exports","ember-responsive/initializers/responsive"],(function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),e.default=void 0
var n=t.default
e.default=n})),define("dummy/initializers/export-application-global",["exports","dummy/config/environment"],(function(e,t){function n(){var e=arguments[1]||arguments[0]
if(!1!==t.default.exportApplicationGlobal){var n
if("undefined"!=typeof window)n=window
else if("undefined"!=typeof global)n=global
else{if("undefined"==typeof self)return
n=self}var o,r=t.default.exportApplicationGlobal
o="string"==typeof r?r:Ember.String.classify(t.default.modulePrefix),n[o]||(n[o]=e,e.reopen({willDestroy:function(){this._super.apply(this,arguments),delete n[o]}}))}}Object.defineProperty(e,"__esModule",{value:!0}),e.initialize=n,e.default=void 0
var o={name:"export-application-global",initialize:n}
e.default=o})),define("dummy/initializers/inject-media",["exports","ember-cli-addon-docs/initializers/inject-media"],(function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),Object.defineProperty(e,"default",{enumerable:!0,get:function(){return t.default}}),Object.defineProperty(e,"initialize",{enumerable:!0,get:function(){return t.initialize}})})),define("dummy/initializers/liquid-fire",["exports","liquid-fire/velocity-ext"],(function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),e.default=void 0
e.default={name:"liquid-fire",initialize:function(){}}})),define("dummy/initializers/route-anchor-jump",["exports","ember-cli-addon-docs/initializers/route-anchor-jump"],(function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),Object.defineProperty(e,"default",{enumerable:!0,get:function(){return t.default}}),Object.defineProperty(e,"initialize",{enumerable:!0,get:function(){return t.initialize}})})),define("dummy/instance-initializers/ember-data",["exports"],(function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=void 0
e.default={name:"ember-data",initialize:function(){}}})),define("dummy/instance-initializers/ember-href-to",["exports","ember-href-to/href-to"],(function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),e.default=void 0
var n={name:"ember-href-to",initialize:function(e){if("undefined"==typeof FastBoot){var n=function(n){var o="A"===n.target.tagName?n.target:function(e){if(e.closest)return e.closest("a")
for(e=e.parentElement;e&&"A"!==e.tagName;)e=e.parentElement
return e}(n.target)
o&&new t.default(e,n,o).maybeHandle()}
document.body.addEventListener("click",n),e.reopen({willDestroy:function(){return document.body.removeEventListener("click",n),this._super.apply(this,arguments)}})}}}
e.default=n})),define("dummy/locations/router-scroll",["exports","ember-router-scroll/locations/router-scroll"],(function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),Object.defineProperty(e,"default",{enumerable:!0,get:function(){return t.default}})})),define("dummy/models/class",["exports","ember-cli-addon-docs/models/class"],(function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),Object.defineProperty(e,"default",{enumerable:!0,get:function(){return t.default}})})),define("dummy/models/component",["exports","ember-cli-addon-docs/models/component"],(function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),Object.defineProperty(e,"default",{enumerable:!0,get:function(){return t.default}})})),define("dummy/models/module",["exports","ember-cli-addon-docs/models/module"],(function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),Object.defineProperty(e,"default",{enumerable:!0,get:function(){return t.default}})})),define("dummy/models/project",["exports","ember-cli-addon-docs/models/project"],(function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),Object.defineProperty(e,"default",{enumerable:!0,get:function(){return t.default}})}))
define("dummy/modifiers/did-insert",["exports","@ember/render-modifiers/modifiers/did-insert"],(function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),Object.defineProperty(e,"default",{enumerable:!0,get:function(){return t.default}})})),define("dummy/modifiers/did-update",["exports","@ember/render-modifiers/modifiers/did-update"],(function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),Object.defineProperty(e,"default",{enumerable:!0,get:function(){return t.default}})})),define("dummy/modifiers/keyboard-shortcut",["exports","ember-keyboard/deprecated/modifiers/keyboard-shortcut"],(function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),Object.defineProperty(e,"default",{enumerable:!0,get:function(){return t.default}})})),define("dummy/modifiers/on-key",["exports","ember-keyboard/modifiers/on-key"],(function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),Object.defineProperty(e,"default",{enumerable:!0,get:function(){return t.default}})})),define("dummy/modifiers/on-keyboard",["exports","ember-keyboard/deprecated/modifiers/on-keyboard"],(function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),Object.defineProperty(e,"default",{enumerable:!0,get:function(){return t.default}})})),define("dummy/modifiers/will-destroy",["exports","@ember/render-modifiers/modifiers/will-destroy"],(function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),Object.defineProperty(e,"default",{enumerable:!0,get:function(){return t.default}})})),define("dummy/router",["exports","ember-cli-addon-docs/router","dummy/config/environment"],(function(e,t,n){function o(e,t){return(o=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}function r(e){var t=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1
if(Reflect.construct.sham)return!1
if("function"==typeof Proxy)return!0
try{return Date.prototype.toString.call(Reflect.construct(Date,[],(function(){}))),!0}catch(e){return!1}}()
return function(){var n,o=a(e)
if(t){var r=a(this).constructor
n=Reflect.construct(o,arguments,r)}else n=o.apply(this,arguments)
return s(this,n)}}function s(e,t){return!t||"object"!==_typeof(t)&&"function"!=typeof t?i(e):t}function i(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called")
return e}function a(e){return(a=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}function d(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}Object.defineProperty(e,"__esModule",{value:!0}),e.default=void 0
var l=function(e){(function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function")
e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&o(e,t)})(s,e)
var t=r(s)
function s(){var e;(function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")})(this,s)
for(var o=arguments.length,r=new Array(o),a=0;a<o;a++)r[a]=arguments[a]
return d(i(e=t.call.apply(t,[this].concat(r))),"location",n.default.locationType),d(i(e),"rootURL",n.default.rootURL),e}return s}(t.default)
e.default=l,l.map((function(){(0,t.docsRoute)(this,(function(){this.route("faq",(function(){this.route("common-issues"),this.route("routing-and-asset-loading"),this.route("security")})),this.route("guides",(function(){this.route("ci"),this.route("common-issues"),this.route("csp"),this.route("development-and-debugging"),this.route("installation"),this.route("security"),this.route("structure"),this.route("upgrading"),this.route("usage")}))}))}))})),define("dummy/routes/docs",["exports","ember-cli-addon-docs/routes/docs"],(function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),Object.defineProperty(e,"default",{enumerable:!0,get:function(){return t.default}})})),define("dummy/routes/docs/api/item",["exports","ember-cli-addon-docs/routes/docs/api/item"],(function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),Object.defineProperty(e,"default",{enumerable:!0,get:function(){return t.default}})})),define("dummy/serializers/-addon-docs",["exports","ember-cli-addon-docs/serializers/-addon-docs"],(function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),Object.defineProperty(e,"default",{enumerable:!0,get:function(){return t.default}})})),define("dummy/serializers/-default",["exports","@ember-data/serializer/json"],(function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),Object.defineProperty(e,"default",{enumerable:!0,get:function(){return t.default}})})),define("dummy/serializers/-json-api",["exports","@ember-data/serializer/json-api"],(function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),Object.defineProperty(e,"default",{enumerable:!0,get:function(){return t.default}})})),define("dummy/serializers/-rest",["exports","@ember-data/serializer/rest"],(function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),Object.defineProperty(e,"default",{enumerable:!0,get:function(){return t.default}})})),define("dummy/serializers/class",["exports","ember-cli-addon-docs/serializers/class"],(function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),Object.defineProperty(e,"default",{enumerable:!0,get:function(){return t.default}})})),define("dummy/serializers/component",["exports","ember-cli-addon-docs/serializers/component"],(function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),Object.defineProperty(e,"default",{enumerable:!0,get:function(){return t.default}})})),define("dummy/serializers/module",["exports","ember-cli-addon-docs/serializers/module"],(function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),Object.defineProperty(e,"default",{enumerable:!0,get:function(){return t.default}})})),define("dummy/serializers/project",["exports","ember-cli-addon-docs/serializers/project"],(function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),Object.defineProperty(e,"default",{enumerable:!0,get:function(){return t.default}})})),define("dummy/services/docs-routes",["exports","ember-cli-addon-docs/services/docs-routes"],(function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),Object.defineProperty(e,"default",{enumerable:!0,get:function(){return t.default}})})),define("dummy/services/docs-search",["exports","ember-cli-addon-docs/services/docs-search"],(function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),Object.defineProperty(e,"default",{enumerable:!0,get:function(){return t.default}})})),define("dummy/services/keyboard",["exports","ember-keyboard/services/keyboard"],(function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),Object.defineProperty(e,"default",{enumerable:!0,get:function(){return t.default}})})),define("dummy/services/liquid-fire-transitions",["exports","liquid-fire/transition-map"],(function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),e.default=void 0
var n=t.default
e.default=n})),define("dummy/services/media",["exports","ember-responsive/services/media"],(function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),e.default=void 0
var n=t.default
e.default=n})),define("dummy/services/modal-dialog",["exports","dummy/config/environment"],(function(e,t){function n(e){return Ember.computed((function(){return t.default["ember-modal-dialog"]&&t.default["ember-modal-dialog"][e]}))}Object.defineProperty(e,"__esModule",{value:!0}),e.default=void 0
var o=Ember.Service.extend({hasEmberTether:n("hasEmberTether"),hasLiquidWormhole:n("hasLiquidWormhole"),hasLiquidTether:n("hasLiquidTether"),destinationElementId:null})
e.default=o})),define("dummy/services/project-version",["exports","ember-cli-addon-docs/services/project-version"],(function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),Object.defineProperty(e,"default",{enumerable:!0,get:function(){return t.default}})})),define("dummy/services/router-scroll",["exports","ember-router-scroll/services/router-scroll"],(function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),Object.defineProperty(e,"default",{enumerable:!0,get:function(){return t.default}})})),define("dummy/services/store",["exports","ember-data/store"],(function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),Object.defineProperty(e,"default",{enumerable:!0,get:function(){return t.default}})})),define("dummy/templates/application",["exports"],(function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=void 0
var t=Ember.HTMLBars.template({id:"OuLJkczu",block:'{"symbols":[],"statements":[[8,"docs-header",[],[[],[]],null],[2,"\\n\\n"],[1,[30,[36,1],[[30,[36,0],null,null]],null]],[2,"\\n\\n"],[8,"docs-keyboard-shortcuts",[],[[],[]],null]],"hasEval":false,"upvars":["-outlet","component"]}',moduleName:"dummy/templates/application.hbs"})
e.default=t})),define("dummy/templates/docs",["exports"],(function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=void 0
var t=Ember.HTMLBars.template({id:"wBdoKpcE",block:'{"symbols":["viewer","nav"],"statements":[[8,"docs-viewer",[],[[],[]],[["default"],[{"statements":[[2,"\\n  "],[8,[32,1,["nav"]],[],[[],[]],[["default"],[{"statements":[[2,"\\n    "],[1,[30,[36,0],[[32,2,["section"]],"Getting Started"],null]],[2,"\\n\\n    "],[1,[30,[36,0],[[32,2,["section"]],"Guides"],null]],[2,"\\n    "],[1,[30,[36,0],[[32,2,["item"]],"Installation","docs.guides.installation"],null]],[2,"\\n    "],[1,[30,[36,0],[[32,2,["item"]],"Usage","docs.guides.usage"],null]],[2,"\\n    "],[1,[30,[36,0],[[32,2,["item"]],"Structure","docs.guides.structure"],null]],[2,"\\n    "],[1,[30,[36,0],[[32,2,["item"]],"Upgrading","docs.guides.upgrading"],null]],[2,"\\n    "],[1,[30,[36,0],[[32,2,["item"]],"Development and Debugging","docs.guides.development-and-debugging"],null]],[2,"\\n    "],[1,[30,[36,0],[[32,2,["item"]],"CI","docs.guides.ci"],null]],[2,"\\n    "],[1,[30,[36,0],[[32,2,["item"]],"Content Security Policy (CSP)","docs.guides.csp"],null]],[2,"\\n\\n    "],[1,[30,[36,0],[[32,2,["section"]],"FAQ"],null]],[2,"\\n    "],[1,[30,[36,0],[[32,2,["item"]],"Common Issues","docs.faq.common-issues"],null]],[2,"\\n    "],[1,[30,[36,0],[[32,2,["item"]],"Routing and Asset Loading","docs.faq.routing-and-asset-loading"],null]],[2,"\\n    "],[1,[30,[36,0],[[32,2,["item"]],"Security","docs.faq.security"],null]],[2,"\\n  "]],"parameters":[2]}]]],[2,"\\n\\n  "],[8,[32,1,["main"]],[],[[],[]],[["default"],[{"statements":[[2,"\\n    "],[10,"div"],[14,0,"docs-container"],[12],[2,"\\n      "],[10,"div"],[14,0,"docs-section"],[12],[2,"\\n        "],[1,[30,[36,0],[[30,[36,1],null,null]],null]],[2,"\\n      "],[13],[2,"\\n    "],[13],[2,"\\n  "]],"parameters":[]}]]],[2,"\\n"]],"parameters":[1]}]]],[2,"\\n"]],"hasEval":false,"upvars":["component","-outlet"]}',moduleName:"dummy/templates/docs.hbs"})
e.default=t})),define("dummy/templates/docs/api/item",["exports"],(function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=void 0
var t=Ember.HTMLBars.template({id:"/nWtsFHc",block:'{"symbols":[],"statements":[[6,[37,3],[[35,0,["isComponent"]]],null,[["default","else"],[{"statements":[[2,"  "],[1,[30,[36,4],null,[["component"],[[35,0]]]]],[2,"\\n"]],"parameters":[]},{"statements":[[6,[37,3],[[35,0,["isClass"]]],null,[["default","else"],[{"statements":[[2,"  "],[1,[30,[36,2],null,[["class"],[[35,0]]]]],[2,"\\n"]],"parameters":[]},{"statements":[[2,"  "],[1,[30,[36,1],null,[["module"],[[35,0]]]]],[2,"\\n"]],"parameters":[]}]]]],"parameters":[]}]]]],"hasEval":false,"upvars":["model","api/x-module","api/x-class","if","api/x-component"]}',moduleName:"dummy/templates/docs/api/item.hbs"})
e.default=t})),define("dummy/templates/docs/faq/common-issues",["exports"],(function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=void 0
var t=Ember.HTMLBars.template({id:"H3ftMi0Z",block:'{"symbols":[],"statements":[[10,"div"],[14,0,"docs-md"],[12],[10,"h1"],[14,1,"common-issues"],[14,0,"docs-md__h1"],[12],[2,"Common Issues"],[13],[2,"\\n    \\n      "],[10,"h2"],[14,1,"i-can-t-open-the-ember-inspector-in-the-packaged-app"],[14,0,"docs-md__h2"],[12],[10,"a"],[14,6,"#i-can-t-open-the-ember-inspector-in-the-packaged-app"],[14,0,"heading-anchor"],[12],[2,"I can\'t open the Ember Inspector in the packaged app"],[13],[13],[2,"\\n    "],[10,"p"],[12],[2,"This is known and desired behavior of Electron. The Developer Tools are still accessible programmatically or via a shortcut (see below). However, the packages needed for "],[10,"a"],[14,6,"https://github.com/electron/devtron"],[14,0,"docs-md__a"],[12],[2,"DevTron"],[13],[2," and the "],[10,"a"],[14,6,"https://github.com/emberjs/ember-inspector"],[14,0,"docs-md__a"],[12],[2,"Ember Inspector"],[13],[2," addons are not currently bundled with production builds."],[13],[2,"\\n\\n      "],[10,"h3"],[14,1,"open-developer-tools-programmatically"],[14,0,"docs-md__h3"],[12],[10,"a"],[14,6,"#open-developer-tools-programmatically"],[14,0,"heading-anchor"],[12],[2,"Open Developer Tools programmatically"],[13],[13],[2,"\\n    "],[10,"p"],[12],[2,"In your ember-electron/main.js file, find the "],[10,"code"],[12],[2,"BrowserWindow"],[13],[2," that is being used to create the window of your app. You can open the developer tools programmatically by calling "],[10,"code"],[12],[2,"openDevTools()"],[13],[2," on its "],[10,"code"],[12],[2,"webContents"],[13],[2,"."],[13],[2,"\\n"],[10,"pre"],[14,0,"docs-md__code"],[12],[10,"code"],[14,0,"undefinedjs"],[12],[10,"span"],[14,0,"hljs-keyword"],[12],[2,"const"],[13],[2," myWindow = "],[10,"span"],[14,0,"hljs-keyword"],[12],[2,"new"],[13],[2," BrowserWindow({});\\nmyWindow.webContents.openDevTools();"],[13],[13],[13]],"hasEval":false,"upvars":[]}',moduleName:"dummy/templates/docs/faq/common-issues.hbs"})
e.default=t}))
define("dummy/templates/docs/faq/routing-and-asset-loading",["exports"],(function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=void 0
var t=Ember.HTMLBars.template({id:"YVvChDLc",block:'{"symbols":[],"statements":[[10,"div"],[14,0,"docs-md"],[12],[10,"h1"],[14,1,"routing-and-asset-loading"],[14,0,"docs-md__h1"],[12],[2,"Routing and Asset Loading"],[13],[2,"\\n    "],[10,"p"],[12],[2,"This is a bit of a deep dive into how we make Ember\'s routing and asset loading work properly when running in an Electron application, along with a discussion of some possible alternatives. This all stems from the fact that in an Electron application we load the Ember app using a "],[10,"code"],[12],[2,"file:"],[13],[2," URL rather than an "],[10,"code"],[12],[2,"http:"],[13],[2," URL."],[13],[2,"\\n\\n      "],[10,"h2"],[14,1,"routing"],[14,0,"docs-md__h2"],[12],[10,"a"],[14,6,"#routing"],[14,0,"heading-anchor"],[12],[2,"Routing"],[13],[13],[2,"\\n    "],[10,"p"],[12],[2,"Let\'s say our app uses the default "],[10,"code"],[12],[2,"history"],[13],[2," (or "],[10,"code"],[12],[2,"auto"],[13],[2,") location type, and has the following routes:"],[13],[2,"\\n"],[10,"pre"],[14,0,"docs-md__code"],[12],[10,"code"],[14,0,"undefinedjavascript"],[12],[2,"Router.map("],[10,"span"],[14,0,"hljs-function"],[12],[10,"span"],[14,0,"hljs-keyword"],[12],[2,"function"],[13],[2,"("],[10,"span"],[14,0,"hljs-params"],[12],[13],[2,") "],[13],[2,"{\\n  "],[10,"span"],[14,0,"hljs-built_in"],[12],[2,"this"],[13],[2,".route("],[10,"span"],[14,0,"hljs-string"],[12],[2,"\'my-route\'"],[13],[2,");\\n});"],[13],[13],[2,"\\n"],[10,"p"],[12],[2,"and we deploy it to "],[10,"code"],[12],[2,"http://my-app.com"],[13],[2,". This means that the URL "],[10,"code"],[12],[2,"http://my-app.com/"],[13],[2," corresponds to the "],[10,"code"],[12],[2,"index"],[13],[2," route, and "],[10,"code"],[12],[2,"http://my-app.com/my-route"],[13],[2," corresponds to the "],[10,"code"],[12],[2,"my-route"],[13],[2," route. The way this is achieved is that whatever web server is serving the Ember app is typically configured to return the Ember app\'s "],[10,"code"],[12],[2,"index.html"],[13],[2," for any requests to "],[10,"code"],[12],[2,"http://my-app.com/<subpath>"],[13],[2,", and "],[10,"code"],[12],[2,"index.html"],[13],[2," loads all the Javascript for the application, including Ember itself. Then Ember\'s routing code looks at the URL path and activates the corresponding route. So the web server combined with Ember\'s "],[10,"code"],[12],[2,"history"],[13],[2," location/routing code creates an abstraction layer that interprets logical locations, in the form of the URL path, resolves them all to the same "],[10,"code"],[12],[2,"index.html"],[13],[2," file, but in a way that exposes that logical location to Ember so it can activate the correct route."],[13],[2,"\\n"],[10,"p"],[12],[2,"When running an Electron app, we serve the files out of the filesystem using a "],[10,"code"],[12],[2,"file:"],[13],[2," URL, which doesn\'t give us the flexibility of a web server -- the URL path cannot be a logical location, but must be a filesystem path that points directly to "],[10,"code"],[12],[2,"index.html"],[13],[2,". For example, when running a development build, the path might be "],[10,"code"],[12],[2,"file:///Users/me/projects/my-app/electron-app/ember-dist/index.html"],[13],[2,". We can\'t use the URL path to specify the Ember route because telling the browser to load "],[10,"code"],[12],[2,"file:///Users/me/projects/my-app/electron-app/ember-dist/index.html/my-route"],[13],[2," will not work -- it will look for a file named "],[10,"code"],[12],[2,"my-route"],[13],[2," inside a directory named "],[10,"code"],[12],[2,"index.html"],[13],[2,", and won\'t find it."],[13],[2,"\\n"],[10,"p"],[12],[2,"So we have to go back to an older method of specifying logical locations, which is to use the URL hash. Fortunately, Ember supports this via the "],[10,"a"],[14,6,"https://api.emberjs.com/ember/release/classes/HashLocation"],[14,0,"docs-md__a"],[12],[2,"HashLocation"],[13],[2," since that was the only option in older browsers. Since URL hashes don\'t affect how "],[10,"code"],[12],[2,"file:"],[13],[2," URLs are resolved to paths, we can tell the browser to load "],[10,"code"],[12],[2,"file:///Users/me/projects/my-app/electron-app/ember-dist/index.html#/my-route"],[13],[2,", and it will load the "],[10,"code"],[12],[2,"index.html"],[13],[2," and then Ember can resolve the route using the path contained in the URL hash."],[13],[2,"\\n"],[10,"p"],[12],[2,"This is why "],[10,"code"],[12],[2,"ember-electron"],[13],[2,"\'s blueprint configures the application\'s "],[10,"code"],[12],[2,"config/environment.js"],[13],[2," with the following entry:"],[13],[2,"\\n"],[10,"pre"],[14,0,"docs-md__code"],[12],[10,"code"],[14,0,"undefinedjavascript"],[12],[2,"locationType: process.env.EMBER_CLI_ELECTRON ? "],[10,"span"],[14,0,"hljs-string"],[12],[2,"\'hash\'"],[13],[2," : "],[10,"span"],[14,0,"hljs-string"],[12],[2,"\'auto\'"],[13],[2,","],[13],[13],[2,"\\n"],[10,"p"],[12],[2,"This way when building for Electron, the app will be configured to use the hash location, and if the app is also built for a browser, it will use the default auto location (which detects and chooses a location type based on browser capabilities)."],[13],[2,"\\n\\n      "],[10,"h2"],[14,1,"asset-loading"],[14,0,"docs-md__h2"],[12],[10,"a"],[14,6,"#asset-loading"],[14,0,"heading-anchor"],[12],[2,"Asset loading"],[13],[13],[2,"\\n    "],[10,"p"],[12],[2,"Ember apps typically load their assets using relative URLs with absolute paths, e.g. "],[10,"code"],[12],[2,"<script src=\\"/assets/vendor-d0ec24509f723d52ccad1d6cef2d281a.js\\"><\/script>"],[13],[2," or "],[10,"code"],[12],[2,"<img src=\\"/img/logo.jpg\\">"],[13],[2,". The browser combines these with the current location to generate the URL from which to load the asset. So if our current URL is "],[10,"code"],[12],[2,"http://my-app.com"],[13],[2,", our example assets URLs would resolve to "],[10,"code"],[12],[2,"http://my-app.com/assets/vendor-d0ec24509f723d52ccad1d6cef2d281a.js"],[13],[2," and "],[10,"code"],[12],[2,"http://my-app.com/img/logo.jpg"],[13],[2,". Even if our current URL is "],[10,"code"],[12],[2,"http://my-app.com/my-route"],[13],[2,", they will resolve to those same URLs, because of the fact that the asset URL paths are absolute, i.e. start with "],[10,"code"],[12],[2,"/"],[13],[2,", so when combined with the current URL, the asset path replaces the URL path, rather than being appended to it."],[13],[2,"\\n"],[10,"p"],[12],[2,"With "],[10,"code"],[12],[2,"file:"],[13],[2," URLs, though, this won\'t work because, following those same rules, combining "],[10,"code"],[12],[2,"file:///Users/me/projects/my-app/electron-app/ember-dist/index.html"],[13],[2," with "],[10,"code"],[12],[2,"/assets/vendor-d0ec24509f723d52ccad1d6cef2d281a.js"],[13],[2," will result in "],[10,"code"],[12],[2,"file:///assets/vendor-d0ec24509f723d52ccad1d6cef2d281a.js"],[13],[2,", not "],[10,"code"],[12],[2,"file:///Users/me/projects/my-app/electron-app/ember-dist/assets/vendor-d0ec24509f723d52ccad1d6cef2d281a.js"],[13],[2,", which is where "],[10,"code"],[12],[2,"vendor-d0ec24509f723d52ccad1d6cef2d281a.js"],[13],[2," actually lives. HTML loaded from the filesystem typically uses relative URLs to get around this, i.e. if we had "],[10,"code"],[12],[2,"<script src=\\"assets/vendor-d0ec24509f723d52ccad1d6cef2d281a.js\\"><\/script>"],[13],[2," or "],[10,"code"],[12],[2,"<img src=\\"img/logo.jpg\\">"],[13],[2," (note that there are no leading "],[10,"code"],[12],[2,"/"],[13],[2,"s), then the paths would be interpreted as relative to the current directory, and would resolve to the correct "],[10,"code"],[12],[2,"file:"],[13],[2," URLs."],[13],[2,"\\n\\n      "],[10,"h3"],[14,1,"javascript-and-css"],[14,0,"docs-md__h3"],[12],[10,"a"],[14,6,"#javascript-and-css"],[14,0,"heading-anchor"],[12],[2,"Javascript and CSS"],[13],[13],[2,"\\n    "],[10,"p"],[12],[2,"For "],[10,"code"],[12],[2,"vendor-d0ec24509f723d52ccad1d6cef2d281a.js"],[13],[2," and other scripts and CSS loaded out of "],[10,"code"],[12],[2,"index.html"],[13],[2,", we have a nice solution for making the URL paths relative. The Ember app\'s "],[10,"code"],[12],[2,"index.html"],[13],[2," specifies them using a "],[10,"code"],[12],[2,"rootURL"],[13],[2," template parameter, e.g. "],[10,"code"],[12],[2,"<script src=\\"{{rootURL}}assets/vendor-d0ec24509f723d52ccad1d6cef2d281a.js\\"><\/script>"],[13],[2,", which is resolved during the Ember build. The default "],[10,"code"],[12],[2,"rootURL"],[13],[2," for Ember apps is "],[10,"code"],[12],[2,"/"],[13],[2,", so it would end up being "],[10,"code"],[12],[2,"<script src=\\"/assets/vendor-d0ec24509f723d52ccad1d6cef2d281a.js\\"><\/script>"],[13],[2,". But we can set the "],[10,"code"],[12],[2,"rootURL"],[13],[2," to "],[10,"code"],[12],[2,"\'\'"],[13],[2,", causing it to end up being "],[10,"code"],[12],[2,"<script src=\\"assets/vendor-d0ec24509f723d52ccad1d6cef2d281a.js\\"><\/script>"],[13],[2," -- a relative path, which is exactly what we want. This is why "],[10,"code"],[12],[2,"ember-electron"],[13],[2,"\'s blueprint configures the application\'s "],[10,"code"],[12],[2,"config/environment.js"],[13],[2," with the following:"],[13],[2,"\\n"],[10,"pre"],[14,0,"docs-md__code"],[12],[10,"code"],[14,0,"undefinedjavascript"],[12],[2,"rootURL: process.env.EMBER_CLI_ELECTRON ? "],[10,"span"],[14,0,"hljs-string"],[12],[2,"\'\'"],[13],[2," : "],[10,"span"],[14,0,"hljs-string"],[12],[2,"\'/\'"],[13],[2,","],[13],[13],[2,"\\n"],[10,"p"],[12],[2,"There is an additional wrinkle when running tests. Since Ember puts the "],[10,"code"],[12],[2,"index.html"],[13],[2," used for tests at "],[10,"code"],[12],[2,"tests/index.html"],[13],[2,", it actually needs assets paths that look like "],[10,"code"],[12],[2,"../assets/vendor-d0ec24509f723d52ccad1d6cef2d281a.js"],[13],[2,". However, "],[10,"code"],[12],[2,"ember-cli"],[13],[2," ("],[10,"a"],[14,6,"https://github.com/ember-cli/clean-base-url"],[14,0,"docs-md__a"],[12],[2,"clean-base-url"],[13],[2," actually) forces a non-empty "],[10,"code"],[12],[2,"rootURL"],[13],[2," to start with "],[10,"code"],[12],[2,"/"],[13],[2,", so "],[10,"code"],[12],[2,"ember-electron"],[13],[2," uses the broccoli pipeline to modify these URLs in "],[10,"code"],[12],[2,"tests/index.html"],[13],[2," to start with "],[10,"code"],[12],[2,"../"],[13],[2,"."],[13],[2,"\\n\\n      "],[10,"h3"],[14,1,"other-assets-images-fonts-etc-"],[14,0,"docs-md__h3"],[12],[10,"a"],[14,6,"#other-assets-images-fonts-etc-"],[14,0,"heading-anchor"],[12],[2,"Other assets (images, fonts, etc.)"],[13],[13],[2,"\\n    "],[10,"p"],[12],[2,"Unfortunately, this approach will not work for images and other such assets that don\'t start with "],[10,"code"],[12],[2,"rootURL"],[13],[2,", like our "],[10,"code"],[12],[2,"<img src=\\"/img/logo.jpg\\">"],[13],[2," example. To solve this case, we do a little trickery in the main process. Electron allows us to intercept requests from the browser, so we use "],[10,"a"],[14,6,"https://www.electronjs.org/docs/api/protocol#protocolinterceptfileprotocolscheme-handler-completion"],[14,0,"docs-md__a"],[12],[2,"protocol.interceptFileProtocol"],[13],[2," to intercept requests for "],[10,"code"],[12],[2,"file:"],[13],[2," URLs, look at their paths, and determine if they look like asset paths. To accomplish this, "],[10,"code"],[12],[2,"ember-electron"],[13],[2,"\'s blueprint creates a "],[10,"code"],[12],[2,"electron-app/src/handle-file-urls.js"],[13],[2," that sets this up, and calls into it from the main process code -- "],[10,"code"],[12],[2,"electron-app/src/index.js"],[13],[2," and "],[10,"code"],[12],[2,"electron-app/tests/index.js"],[13],[2,"."],[13],[2,"\\n"],[10,"p"],[12],[2,"This request intercepting code extracts the requested URL path, appends it to the path to the root of the Ember app, and then looks to see if the result is the path to a file inside the Ember app. If so, it resolves the request to that file. If not, it resolves it to the full requested (absolute) path."],[13],[2,"\\n"],[10,"p"],[12],[2,"This is not perfect -- there is a concievable case where it could do the wrong thing, which is if the URL path pointed to a file when interpreted either as absolute or relative to the Ember app. For example, if you put "],[10,"code"],[12],[2,"images/foo.jpg"],[13],[2," in your Ember app\'s "],[10,"code"],[12],[2,"public"],[13],[2," directory, then a request for "],[10,"code"],[12],[2,"/images/foo.jpg"],[13],[2," would resolve to it. If for some reason the application were trying to load "],[10,"code"],[12],[2,"/images/foo.jpg"],[13],[2," from the root of the filesystem (i.e. you have a top-level directory called "],[10,"code"],[12],[2,"images"],[13],[2," and the app expects it to contain "],[10,"code"],[12],[2,"foo.jpg"],[13],[2,"), it would resolve to the one inside the Ember app, and the application would have no way to load the one at the root of the filesystem. This seems like a very unlikely use case, though -- applications that load files from the filesystem generally do it through node APIs, not in-browser requests."],[13],[2,"\\n\\n      "],[10,"h3"],[14,1,"source-maps"],[14,0,"docs-md__h3"],[12],[10,"a"],[14,6,"#source-maps"],[14,0,"heading-anchor"],[12],[2,"Source maps"],[13],[13],[2,"\\n    "],[10,"p"],[12],[2,"One might observe that the solution for images, fonts, etc., could also apply to the Javascript and CSS, and wonder why we need both solutions. The answer is source maps. Unfortunately when the Chromium developer tools load source maps, it is not intercept-able by the Electron "],[10,"code"],[12],[2,"protocol"],[13],[2," module, and the developer tools are not aware of any intercepting that happens in the main process. So if we left the leading "],[10,"code"],[12],[2,"/"],[13],[2," on the script tags, e.g. "],[10,"code"],[12],[2,"<script src=\\"/assets/vendor-d0ec24509f723d52ccad1d6cef2d281a.js\\"><\/script>"],[13],[2,", then when the developer tools sees the "],[10,"code"],[12],[2,"sourceMappingURL=vendor.map"],[13],[2," at the end of "],[10,"code"],[12],[2,"vendor-d0ec24509f723d52ccad1d6cef2d281a.js"],[13],[2," it will treat "],[10,"code"],[12],[2,"vendor.map"],[13],[2," as a path that is relative to where it thinks the script was loaded from, i.e. "],[10,"code"],[12],[2,"/assets/vendor-d0ec24509f723d52ccad1d6cef2d281a.js"],[13],[2,", so it will try to load it from "],[10,"code"],[12],[2,"/assets/vendor.map"],[13],[2,". Since this request isn\'t intercept-able, the source maps will fail to load. So to make source maps work, we really need to load the Javascript and CSS files from relative URLs, and since we cannot easily rewrite the other assets\' URLs to be relative, we need two different solutions for the two different flavors of assets."],[13],[2,"\\n\\n      "],[10,"h2"],[14,1,"alternatives"],[14,0,"docs-md__h2"],[12],[10,"a"],[14,6,"#alternatives"],[14,0,"heading-anchor"],[12],[2,"Alternatives"],[13],[13],[2,"\\n    "],[10,"p"],[12],[2,"We\'ve investigated a number of alternatives, but none of them seemed better than the existing solution. They are listed here for posterity, and in case things change in the future and/or somebody wants to try them out or figure out how to adapt them into a better solution, or simply finds that one of them better fits their application\'s specific use cases -- each of these alternatives is viable, just with certain drawbacks."],[13],[2,"\\n\\n      "],[10,"h3"],[14,1,"electron-protocol-serve"],[14,0,"docs-md__h3"],[12],[10,"a"],[14,6,"#electron-protocol-serve"],[14,0,"heading-anchor"],[12],[2,"electron-protocol-serve"],[13],[13],[2,"\\n    "],[10,"p"],[12],[10,"a"],[14,6,"https://github.com/bendemboski/electron-protocol-serve"],[14,0,"docs-md__a"],[12],[2,"electron-protocol-serve"],[13],[2," was an ingenious method of implementing an abstraction layer similar to a web server, that solved the routing problem, and both flavors of the asset loading problem. Unfortunately, it ended up being too far off the beaten path of Electron patterns. Electron and Chromium both apply less security/sandboxing when the HTML is loaded from a "],[10,"code"],[12],[2,"file:"],[13],[2," URL, so various common Electron application patterns would not work without manually disabling certain browser security measures when loading from non-"],[10,"code"],[12],[2,"file:"],[13],[2," URLs. But the bigger problem was that starting with Electron 7, and due to some changes in Chromium, it could no longer load source maps when using "],[10,"code"],[12],[2,"electron-protocol-serve"],[13],[2," (see "],[10,"a"],[14,6,"https://github.com/electron/electron/issues/21699"],[14,0,"docs-md__a"],[12],[2,"this issue"],[13],[2,")."],[13],[2,"\\n"],[10,"p"],[12],[2,"Note that this is fundamentally the same reason why we need different solutions for Javascript/CSS and other assets -- see above."],[13],[2,"\\n\\n      "],[10,"h3"],[14,1,"use-a-web-server"],[14,0,"docs-md__h3"],[12],[10,"a"],[14,6,"#use-a-web-server"],[14,0,"heading-anchor"],[12],[2,"use a web server"],[13],[13],[2,"\\n    "],[10,"p"],[12],[2,"It would certainly be possible to bundle "],[10,"code"],[12],[2,"express"],[13],[2," or some other web server with an Electron app, configure it to serve the Ember app, and then load the app over HTTP rather than using "],[10,"code"],[12],[2,"file:"],[13],[2," URLs. This would also solve the routing problem and both flavors of the asset loading problem, but would also have one of the same drawbacks as "],[10,"code"],[12],[2,"electron-protocol-serve"],[13],[2," did, which is that the app would run at the higher level of security/sandboxing applied by Chromium and Electron to apps loaded via non-"],[10,"code"],[12],[2,"file:"],[13],[2," URLs. But also, in addition to straying from the Electron beaten path, running a web server seems like a pretty high-runtime-overhead approach to be our out-of-box solution, so we\'ve opted for something lighter-weight."],[13],[2,"\\n\\n      "],[10,"h3"],[14,1,"leverage-broccoli-asset-rev"],[14,0,"docs-md__h3"],[12],[10,"a"],[14,6,"#leverage-broccoli-asset-rev"],[14,0,"heading-anchor"],[12],[2,"leverage broccoli-asset-rev"],[13],[13],[2,"\\n    "],[10,"p"],[12],[10,"code"],[12],[2,"broccoli-asset-rev"],[13],[2," is a "],[10,"code"],[12],[2,"brocolli"],[13],[2," plugin that rewrites asset paths to add cache-busting fingerprints and also prepend CDN URLs, so while it wouldn\'t help with the routing problem, it is fundamentally attacking the same problem that we\'re trying to attack of rewriting the URLs of all of an Ember application\'s assets. Unfortunately, we can\'t really use it as intended -- it\'s built to accept static CDN URLs that are the same for every user of the application, and are known at Ember build time. We cannot prepend absolute "],[10,"code"],[12],[2,"file:"],[13],[2," URLs to our asset paths because this prepending happens at Ember build time, and we don\'t know the absolute filesystem path to the application until it\'s installed on the user\'s system."],[13],[2,"\\n"],[10,"p"],[12],[2,"One option would be to specify "],[10,"code"],[12],[2,"./"],[13],[2," as the prepend URL, which would convert the asset paths into relative paths. This almost works, but unfortunately is again a bit too far off the beaten path -- "],[10,"code"],[12],[2,"broccoli-asset-rev"],[13],[2," was not written with relative URLs in mind, so things don\'t quite work. An initial stab is adding this to "],[10,"code"],[12],[2,"ember-cli-build.js"],[13],[2,":"],[13],[2,"\\n"],[10,"pre"],[14,0,"docs-md__code"],[12],[10,"code"],[14,0,"undefinedjavascript"],[12],[2,"fingerprint: {\\n  "],[10,"span"],[14,0,"hljs-attr"],[12],[2,"enabled"],[13],[2,": process.env.EMBER_CLI_ELECTRON || process.env.EMBER_ENV === "],[10,"span"],[14,0,"hljs-string"],[12],[2,"\'production\'"],[13],[2,",\\n  "],[10,"span"],[14,0,"hljs-attr"],[12],[2,"prepend"],[13],[2,": "],[10,"span"],[14,0,"hljs-string"],[12],[2,"\'./\'"],[13],[2,"\\n}"],[13],[13],[2,"\\n"],[10,"p"],[12],[2,"This fixes all the asset paths to load into the browser, but leaves sourcemaps broken. The reason is that "],[10,"code"],[12],[2,"broccoli-asset-rev"],[13],[2," also rewrites source map URLs expecting them to be absolute. So if "],[10,"code"],[12],[2,"prepend"],[13],[2," is "],[10,"code"],[12],[2,"http://cdn.com/"],[13],[2,", then it would expect "],[10,"code"],[12],[2,"vendor.map"],[13],[2," to be at "],[10,"code"],[12],[2,"http://cdn.com/assets/vendor-<hash>.map"],[13],[2,", and would rewrite the "],[10,"code"],[12],[2,"sourceMappingURL=vendor.map"],[13],[2," at the end of "],[10,"code"],[12],[2,"vendor-d0ec24509f723d52ccad1d6cef2d281a.js"],[13],[2," to be "],[10,"code"],[12],[2,"sourceMappingURL=http://cdn.com/assets/vendor-<hash>.map"],[13],[2,". This is fine for prepending absolute URLs, but if we prepend "],[10,"code"],[12],[2,"./"],[13],[2,", then it ends up rewriting the source map URL as "],[10,"code"],[12],[2,"sourceMappingURL=./assets/vendor-<hash>.map"],[13],[2,". But since both "],[10,"code"],[12],[2,"vendor-<hash>.js"],[13],[2," and "],[10,"code"],[12],[2,"vendor-<hash>.map"],[13],[2," end up in the same directory, and the "],[10,"code"],[12],[2,"sourceMappingURL"],[13],[2," is interpreted relative to where "],[10,"code"],[12],[2,"vendor-d0ec24509f723d52ccad1d6cef2d281a.js"],[13],[2," is, it resolves to "],[10,"code"],[12],[2,".../ember-dist/assets/assets/vendor-<hash>.map"],[13],[2,". "],[10,"code"],[12],[2,"broccoli-asset-rev"],[13],[2," simply doesn\'t expect or handle relative "],[10,"code"],[12],[2,"prepend"],[13],[2," URLs."],[13],[2,"\\n"],[10,"p"],[12],[2,"This could potentially be fixed by broccoli\'ing the map files into "],[10,"code"],[12],[2,"assets/assets"],[13],[2,", or using the broccoli pipeline to rewrite the "],[10,"code"],[12],[2,"assets/assets/"],[13],[2," to just be "],[10,"code"],[12],[2,"assets/"],[13],[2,", but then we\'re kinda layering kludges, and it really doesn\'t seem like the way to go. It can also be partially fixed by changing the fingerprint config to"],[13],[2,"\\n"],[10,"pre"],[14,0,"docs-md__code"],[12],[10,"code"],[14,0,"undefinedjavascript"],[12],[2,"fingerprint: {\\n  "],[10,"span"],[14,0,"hljs-attr"],[12],[2,"enabled"],[13],[2,": process.env.EMBER_CLI_ELECTRON || process.env.EMBER_ENV === "],[10,"span"],[14,0,"hljs-string"],[12],[2,"\'production\'"],[13],[2,",\\n  "],[10,"span"],[14,0,"hljs-attr"],[12],[2,"extensions"],[13],[2,": [ "],[10,"span"],[14,0,"hljs-string"],[12],[2,"\'js\'"],[13],[2,", "],[10,"span"],[14,0,"hljs-string"],[12],[2,"\'css\'"],[13],[2,", "],[10,"span"],[14,0,"hljs-string"],[12],[2,"\'png\'"],[13],[2,", "],[10,"span"],[14,0,"hljs-string"],[12],[2,"\'jpg\'"],[13],[2,", "],[10,"span"],[14,0,"hljs-string"],[12],[2,"\'gif\'"],[13],[2," ],\\n  "],[10,"span"],[14,0,"hljs-attr"],[12],[2,"prepend"],[13],[2,": "],[10,"span"],[14,0,"hljs-string"],[12],[2,"\'./\'"],[13],[2,"\\n}"],[13],[13],[2,"\\n"],[10,"p"],[12],[2,"where the "],[10,"code"],[12],[2,"extensions"],[13],[2," array includes all default asset types except "],[10,"code"],[12],[2,"map"],[13],[2,", i.e. disables rewriting the map files so the "],[10,"code"],[12],[2,"sourceMappingURL"],[13],[2,"s in the Javascript files are not modified...but it appears that "],[10,"code"],[12],[2,"broccoli-asset-rewrite"],[13],[2," has a bug where if we have CSS sourcemaps, the fact that we\'re rewriting "],[10,"code"],[12],[2,".css"],[13],[2," files causes it to incorrectly recognize the "],[10,"code"],[12],[2,"my-app.css"],[13],[2," substring of "],[10,"code"],[12],[2,"sourceMappingURL=my-app.css.map"],[13],[2," as a reference to the CSS file and rewrite it...so further evidence that we\'re wandering off the beaten path."],[13],[2,"\\n\\n      "],[10,"h3"],[14,1,"change-assets-paths-to-be-relative"],[14,0,"docs-md__h3"],[12],[10,"a"],[14,6,"#change-assets-paths-to-be-relative"],[14,0,"heading-anchor"],[12],[2,"change assets paths to be relative"],[13],[13],[2,"\\n    "],[10,"p"],[12],[2,"One other fix for asset loading is to simply make all the asset paths relative, e.g. change "],[10,"code"],[12],[2,"<img src=\\"/img/logo.jpg\\">"],[13],[2," to "],[10,"code"],[12],[2,"<img src=\\"img/logo.jpg\\">"],[13],[2,". However, this will not work if the Ember app is also built to run in the browser without some similar acrobatics as described above to re-introduce the "],[10,"code"],[12],[2,"/"],[13],[2," or prepend a CDN URL, and it also assumes that the application author has control over all of the markup, which may not be the case if they use third-party addons for UI."],[13],[13]],"hasEval":false,"upvars":[]}',moduleName:"dummy/templates/docs/faq/routing-and-asset-loading.hbs"})
e.default=t})),define("dummy/templates/docs/faq/security",["exports"],(function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=void 0
var t=Ember.HTMLBars.template({id:"FrWubz05",block:'{"symbols":[],"statements":[[10,"div"],[14,0,"docs-md"],[12],[10,"h1"],[14,1,"security-concerns"],[14,0,"docs-md__h1"],[12],[2,"Security concerns"],[13],[2,"\\n    \\n      "],[10,"h2"],[14,1,"how-can-i-address-the-insecure-content-security-policy-warning-"],[14,0,"docs-md__h2"],[12],[10,"a"],[14,6,"#how-can-i-address-the-insecure-content-security-policy-warning-"],[14,0,"heading-anchor"],[12],[2,"How can I address the \\"Insecure Content-Security-Policy\\" warning?"],[13],[13],[2,"\\n    "],[10,"p"],[12],[2,"If you create a new "],[10,"code"],[12],[2,"ember-electron"],[13],[2," application using\\n"],[10,"code"],[12],[2,"ember new my-app"],[13],[2," and "],[10,"code"],[12],[2,"ember install ember-electron"],[13],[2,"\\nand then run "],[10,"code"],[12],[2,"ember electron"],[13],[2," you may (if using Electron 2.0 or newer)\\nsee a warning message in the console like this:\\n"],[10,"img"],[14,"src","images/warn-insecure-csp.png"],[14,"alt","Electron Security Warning (Insecure Content-Security-Policy) This renderer process has either no Content Security Policy set or a policy with \\"unsafe-eval\\" enabled. This exposes users of this app to unnecessary security risks. For more information and help, consult https://electronjs.org/docs/tutorial/security. This warning will not show up once the app is packaged."],[12],[13],[13],[2,"\\n"],[10,"p"],[12],[2,"This warning is regarding not having defined a strict "],[10,"a"],[14,6,"https://developer.mozilla.org/en-US/docs/Web/HTTP/CSP"],[14,0,"docs-md__a"],[12],[10,"code"],[12],[2,"Content-Security-Policy"],[13],[2," (CSP)"],[13],[2,".\\nSince this is a general concern for all Ember applications and all Electron applications,\\n"],[10,"code"],[12],[2,"ember-electron"],[13],[2," itself does not make any changes regarding the application\'s CSP."],[10,"br"],[12],[13],[2,"The "],[10,"a"],[14,6,"https://github.com/rwjblue/ember-cli-content-security-policy"],[14,0,"docs-md__a"],[12],[10,"code"],[12],[2,"ember-cli-content-security-policy"],[13],[2," addon"],[13],[2,"\\nis designed to make it easier to specify a "],[10,"code"],[12],[2,"Content-Security-Policy"],[13],[2," for Ember applications,\\nand we recommend that developers using "],[10,"code"],[12],[2,"ember-electron"],[13],[2," use it to specify appropriate CSP directives."],[13],[2,"\\n"],[10,"p"],[12],[2,"As an electron application developer, you should familiarize yourself with\\nknown risks and their corresponding mitigation techniques.\\nSome good resources for getting started are the\\n"],[10,"a"],[14,6,"https://electronjs.org/docs/tutorial/security"],[14,0,"docs-md__a"],[12],[2,"Electron security tutorial"],[13],[2,",\\n"],[10,"a"],[14,6,"https://content-security-policy.com/"],[14,0,"docs-md__a"],[12],[2,"content-security-policy.com"],[13],[2,",\\nand the MDN "],[10,"a"],[14,6,"https://developer.mozilla.org/en-US/docs/Web/Security"],[14,0,"docs-md__a"],[12],[2,"Web security landing page"],[13],[2,"."],[13],[2,"\\n\\n      "],[10,"h3"],[14,1,"tl-dr"],[14,0,"docs-md__h3"],[12],[10,"a"],[14,6,"#tl-dr"],[14,0,"heading-anchor"],[12],[2,"TL;DR"],[13],[13],[2,"\\n    \\n        "],[10,"ul"],[14,0,"docs-list-disc"],[12],[10,"li"],[12],[10,"code"],[12],[2,"ember install ember-cli-content-security-policy"],[13],[13],[2,"\\n"],[10,"li"],[12],[2,"Add the following to "],[10,"code"],[12],[2,"ENV"],[13],[2," (in "],[10,"code"],[12],[2,"config/environment.js"],[13],[2,"):"],[10,"pre"],[14,0,"docs-md__code"],[12],[10,"code"],[14,0,"undefinedjs"],[12],[10,"span"],[14,0,"hljs-comment"],[12],[2,"// ember-cli-content-security-policy"],[13],[2,"\\n"],[10,"span"],[14,0,"hljs-attr"],[12],[2,"contentSecurityPolicy"],[13],[2,": {\\n  "],[10,"span"],[14,0,"hljs-string"],[12],[2,"\'default-src\'"],[13],[2,": ["],[10,"span"],[14,0,"hljs-string"],[12],[2,"\\"\'none\'\\""],[13],[2,"],\\n  "],[10,"span"],[14,0,"hljs-string"],[12],[2,"\'script-src\'"],[13],[2,": ["],[10,"span"],[14,0,"hljs-string"],[12],[2,"\\"\'self\'\\""],[13],[2,"],\\n  "],[10,"span"],[14,0,"hljs-string"],[12],[2,"\'font-src\'"],[13],[2,": ["],[10,"span"],[14,0,"hljs-string"],[12],[2,"\\"\'self\'\\""],[13],[2,"],\\n  "],[10,"span"],[14,0,"hljs-string"],[12],[2,"\'connect-src\'"],[13],[2,": ["],[10,"span"],[14,0,"hljs-string"],[12],[2,"\\"\'self\'\\""],[13],[2,"],\\n  "],[10,"span"],[14,0,"hljs-string"],[12],[2,"\'img-src\'"],[13],[2,": ["],[10,"span"],[14,0,"hljs-string"],[12],[2,"\\"\'self\'\\""],[13],[2,"],\\n  "],[10,"span"],[14,0,"hljs-string"],[12],[2,"\'style-src\'"],[13],[2,": ["],[10,"span"],[14,0,"hljs-string"],[12],[2,"\\"\'self\'\\""],[13],[2,"],\\n  "],[10,"span"],[14,0,"hljs-string"],[12],[2,"\'media-src\'"],[13],[2,": ["],[10,"span"],[14,0,"hljs-string"],[12],[2,"\\"\'self\'\\""],[13],[2,"]\\n},\\n"],[10,"span"],[14,0,"hljs-attr"],[12],[2,"contentSecurityPolicyMeta"],[13],[2,": "],[10,"span"],[14,0,"hljs-literal"],[12],[2,"true"],[13],[2,","],[13],[13],[2,"\\n"],[13],[2,"\\n"],[10,"li"],[12],[2,"Run "],[10,"code"],[12],[2,"ember electron"],[13],[2," and check the console for errors (i.e. violations of the newly defined Content-Security-Policy)\\ne.g. "],[10,"code"],[12],[2,"Refused to load...because it violates the following Content Security Policy directive:..."],[13],[13],[2,"\\n"],[10,"li"],[12],[2,"If there are no problems then you are done.\\nOtherwise, you\'ll need to examine the code in violation and either make it compliant or adjust the policy to allow it.  "],[13],[2,"\\n"],[13],[2,"\\n      \\n      "],[10,"h2"],[14,1,"why-do-i-see-electron-security-warning-insecure-resources-when-running-tests-"],[14,0,"docs-md__h2"],[12],[10,"a"],[14,6,"#why-do-i-see-electron-security-warning-insecure-resources-when-running-tests-"],[14,0,"heading-anchor"],[12],[2,"Why do I see \\"Electron Security Warning (Insecure Resources)\\" when running tests?"],[13],[13],[2,"\\n    "],[10,"p"],[12],[2,"To aid users in keeping their applications secure, Electron warns about any scripts\\nor other resources loaded out of "],[10,"code"],[12],[2,"index.html"],[13],[2," without encryption (using "],[10,"code"],[12],[2,"http:"],[13],[2,"\\nrather than "],[10,"code"],[12],[2,"https:"],[13],[2,"). When running tests, the renderer process has to load some\\nresources from the local express server to allow it to communicate with testem, which\\nmanages the test run, and this cannot easily be done over "],[10,"code"],[12],[2,"https:"],[13],[2,". The expected list\\nof URLs is:"],[13],[2,"\\n"],[10,"pre"],[14,0,"docs-md__code"],[12],[10,"code"],[12],[2,"- http://testemserver/testem.js\\n- http://testemserver/testem/connection.html"],[13],[13],[10,"p"],[12],[2,"We leave the security warnings enabled when running tests so you can see if it\'s warning\\nabout any other insecure content, besides the URLs listed about, loaded during tests."],[13],[13]],"hasEval":false,"upvars":[]}',moduleName:"dummy/templates/docs/faq/security.hbs"})
e.default=t})),define("dummy/templates/docs/guides/ci",["exports"],(function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=void 0
var t=Ember.HTMLBars.template({id:"EoaHpjSS",block:'{"symbols":[],"statements":[[10,"div"],[14,0,"docs-md"],[12],[10,"h1"],[14,1,"running-ci-tests-on-travis-ci-circle-ci-jenkins-and-other-headless-systems"],[14,0,"docs-md__h1"],[12],[2,"Running CI Tests on Travis CI, Circle CI, Jenkins and other headless systems"],[13],[2,"\\n    "],[10,"p"],[12],[2,"To run Electron tests in CI, you need to run the "],[10,"code"],[12],[2,"ember electron:test"],[13],[2," command. But some additional setup is usually required."],[13],[2,"\\n\\n      "],[10,"h2"],[14,1,"installing-electron-dependencies"],[14,0,"docs-md__h2"],[12],[10,"a"],[14,6,"#installing-electron-dependencies"],[14,0,"heading-anchor"],[12],[2,"Installing Electron dependencies"],[13],[13],[2,"\\n    "],[10,"p"],[12],[2,"In CI you\'ll need to make sure that you\'ve installed your Electron app dependencies as well as your Ember dependencies, which means running "],[10,"code"],[12],[2,"yarn"],[13],[2," or "],[10,"code"],[12],[2,"npm install"],[13],[2," in "],[10,"code"],[12],[2,"electron-app/"],[13],[2,". "],[10,"code"],[12],[2,"ember-electron"],[13],[2,"\'s blueprint sets this up for you in "],[10,"code"],[12],[2,".travis.yml"],[13],[2,", but if it fails, or you use a different CI provider, or you want to configure it manually, you\'ll need to add something like"],[13],[2,"\\n"],[10,"pre"],[14,0,"docs-md__code"],[12],[10,"code"],[14,0,"undefinedsh"],[12],[2,"cd electron-app && yarn"],[13],[13],[2,"\\n"],[10,"p"],[12],[2,"or"],[13],[2,"\\n"],[10,"pre"],[14,0,"docs-md__code"],[12],[10,"code"],[14,0,"undefinedsh"],[12],[2,"cd electron-app && npm install"],[13],[13],[2,"\\n\\n      "],[10,"h2"],[14,1,"setting-up-a-virtual-display"],[14,0,"docs-md__h2"],[12],[10,"a"],[14,6,"#setting-up-a-virtual-display"],[14,0,"heading-anchor"],[12],[2,"Setting up a virtual display"],[13],[13],[2,"\\n    "],[10,"p"],[12],[2,"Because Chromium requires a display to work, you will need to create a fake display during your test in a headless environment like Travis CI or Circle CI. "],[10,"code"],[12],[2,"ember-electron"],[13],[2,"\'s blueprint sets this up for you in "],[10,"code"],[12],[2,".travis.yml"],[13],[2,", but if it fails, or you use a different CI provider, or you want to configure it manually, ensure that you take the following steps:"],[13],[2,"\\n\\n        "],[10,"ul"],[14,0,"docs-list-disc"],[12],[10,"li"],[12],[2,"Install "],[10,"a"],[14,6,"https://en.wikipedia.org/wiki/Xvfb"],[14,0,"docs-md__a"],[12],[10,"code"],[12],[2,"xvfb"],[13],[13],[2,". It\'s a virtual framebuffer, implementing the X11 display server protocol - it performs all graphical operations in memory without showing any screen output, which is exactly what we need. A "],[10,"a"],[14,6,"https://wiki.jenkins-ci.org/display/JENKINS/Xvfb+Plugin"],[14,0,"docs-md__a"],[12],[2,"Jenkins addon is available"],[13],[2,"."],[13],[2,"\\n"],[10,"li"],[12],[2,"Create a virtual "],[10,"code"],[12],[2,"xvfb"],[13],[2," screen and export an environment variable called "],[10,"code"],[12],[2,"DISPLAY"],[13],[2," that points to it. Electron will automatically pick it up."],[13],[2,"\\n"],[13],[2,"\\n      \\n      "],[10,"h2"],[14,1,"-travis-yml"],[14,0,"docs-md__h2"],[12],[10,"a"],[14,6,"#-travis-yml"],[14,0,"heading-anchor"],[12],[2,".travis.yml"],[13],[13],[2,"\\n    "],[10,"p"],[12],[2,"The result of both of the above steps will look something like this in "],[10,"code"],[12],[2,".travis.yml"],[13],[2,":"],[13],[2,"\\n"],[10,"pre"],[14,0,"docs-md__code"],[12],[10,"code"],[14,0,"undefinedyaml"],[12],[2,"addons:\\n  apt:\\n    packages:\\n      - xvfb\\n\\ninstall:\\n  - <npm or yarn install>\\n  - cd electron-app && <npm or yarn install>\\n  - export DISPLAY=\':99.0\'\\n  - Xvfb :99 -screen 0 1024x768x24 > /dev/null 2>&1 &"],[13],[13],[13]],"hasEval":false,"upvars":[]}',moduleName:"dummy/templates/docs/guides/ci.hbs"})
e.default=t})),define("dummy/templates/docs/guides/csp",["exports"],(function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=void 0
var t=Ember.HTMLBars.template({id:"ZO+jdCgo",block:'{"symbols":[],"statements":[[10,"div"],[14,0,"docs-md"],[12],[10,"h1"],[14,1,"using-a-content-security-policy"],[14,0,"docs-md__h1"],[12],[2,"Using a Content Security Policy"],[13],[2,"\\n    "],[10,"p"],[12],[2,"You may have noticed Electron warns if you do not have a Content Security Policy setup.\\nThis has been the case for quite awhile. To fix it, you may want to setup a CSP that\\nmakes sense for your app."],[13],[2,"\\n"],[10,"p"],[12],[2,"First, you will need to install "],[10,"a"],[14,6,"https://github.com/rwjblue/ember-cli-content-security-policy"],[14,0,"docs-md__a"],[12],[2,"ember-cli-content-security-policy"],[13],[2,"."],[13],[2,"\\n"],[10,"pre"],[14,0,"docs-md__code"],[12],[10,"code"],[14,0,"undefinedbash"],[12],[2,"ember install ember-cli-content-security-policy"],[13],[13],[2,"\\n"],[10,"p"],[12],[2,"Then you should start by adding this default config to your "],[10,"code"],[12],[2,"config/environment.js"],[13],[2," file\\nand tweak it further for the needs of your app."],[13],[2,"\\n"],[10,"pre"],[14,0,"docs-md__code"],[12],[10,"code"],[14,0,"undefinedjs"],[12],[2,"contentSecurityPolicy: {\\n  "],[10,"span"],[14,0,"hljs-string"],[12],[2,"\'default-src\'"],[13],[2,": ["],[10,"span"],[14,0,"hljs-string"],[12],[2,"\\"\'none\'\\""],[13],[2,"],\\n  "],[10,"span"],[14,0,"hljs-string"],[12],[2,"\'script-src\'"],[13],[2,": [\\n    "],[10,"span"],[14,0,"hljs-string"],[12],[2,"\'http://localhost:7020\'"],[13],[2,",\\n    "],[10,"span"],[14,0,"hljs-string"],[12],[2,"\'http://localhost:7357\'"],[13],[2,",\\n    "],[10,"span"],[14,0,"hljs-string"],[12],[2,"\'http://testemserver\'"],[13],[2,",\\n    "],[10,"span"],[14,0,"hljs-string"],[12],[2,"\\"\'self\'\\""],[13],[2,",\\n    "],[10,"span"],[14,0,"hljs-string"],[12],[2,"\\"\'unsafe-inline\'\\""],[13],[2,"\\n  ],\\n  "],[10,"span"],[14,0,"hljs-string"],[12],[2,"\'font-src\'"],[13],[2,": ["],[10,"span"],[14,0,"hljs-string"],[12],[2,"\\"\'self\'\\""],[13],[2,"],\\n  "],[10,"span"],[14,0,"hljs-string"],[12],[2,"\'frame-src\'"],[13],[2,": ["],[10,"span"],[14,0,"hljs-string"],[12],[2,"\'http://localhost:7357\'"],[13],[2,", "],[10,"span"],[14,0,"hljs-string"],[12],[2,"\'http://testemserver/\'"],[13],[2,", "],[10,"span"],[14,0,"hljs-string"],[12],[2,"\\"\'self\'\\""],[13],[2,"],\\n  "],[10,"span"],[14,0,"hljs-string"],[12],[2,"\'connect-src\'"],[13],[2,": ["],[10,"span"],[14,0,"hljs-string"],[12],[2,"\\"\'self\'\\""],[13],[2,"],\\n  "],[10,"span"],[14,0,"hljs-string"],[12],[2,"\'img-src\'"],[13],[2,": ["],[10,"span"],[14,0,"hljs-string"],[12],[2,"\'data:\'"],[13],[2,", "],[10,"span"],[14,0,"hljs-string"],[12],[2,"\\"\'self\'\\""],[13],[2,"],\\n  "],[10,"span"],[14,0,"hljs-string"],[12],[2,"\'style-src\'"],[13],[2,": ["],[10,"span"],[14,0,"hljs-string"],[12],[2,"\\"\'self\'\\""],[13],[2,", "],[10,"span"],[14,0,"hljs-string"],[12],[2,"\\"\'unsafe-inline\'\\""],[13],[2,"],\\n  "],[10,"span"],[14,0,"hljs-string"],[12],[2,"\'media-src\'"],[13],[2,": ["],[10,"span"],[14,0,"hljs-string"],[12],[2,"\\"\'self\'\\""],[13],[2,"]\\n},\\n"],[10,"span"],[14,0,"hljs-attr"],[12],[2,"contentSecurityPolicyMeta"],[13],[2,": "],[10,"span"],[14,0,"hljs-literal"],[12],[2,"true"],[13],[2,","],[13],[13],[2,"\\n"],[10,"p"],[12],[2,"If you are using ember-auto-import or embroider you will also need to forbid eval there:"],[13],[2,"\\n"],[10,"pre"],[14,0,"docs-md__code"],[12],[10,"code"],[14,0,"undefinedjs"],[12],[2,"autoImport: {\\n  "],[10,"span"],[14,0,"hljs-attr"],[12],[2,"forbidEval"],[13],[2,": "],[10,"span"],[14,0,"hljs-literal"],[12],[2,"true"],[13],[2,"\\n},"],[13],[13],[13]],"hasEval":false,"upvars":[]}',moduleName:"dummy/templates/docs/guides/csp.hbs"})
e.default=t})),define("dummy/templates/docs/guides/development-and-debugging",["exports"],(function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=void 0
var t=Ember.HTMLBars.template({id:"EFTQFul2",block:'{"symbols":[],"statements":[[10,"div"],[14,0,"docs-md"],[12],[10,"h1"],[14,1,"development-and-debugging"],[14,0,"docs-md__h1"],[12],[2,"Development and Debugging"],[13],[2,"\\n    \\n      "],[10,"h2"],[14,1,"require-and-requirenode-"],[14,0,"docs-md__h2"],[12],[10,"a"],[14,6,"#require-and-requirenode-"],[14,0,"heading-anchor"],[12],[2,"require() and requireNode()"],[13],[13],[2,"\\n    "],[10,"p"],[12],[2,"TL;DR is to use "],[10,"code"],[12],[2,"requireNode()"],[13],[2," instead of "],[10,"code"],[12],[2,"require()"],[13],[2," when requiring node modules from your Ember application."],[13],[2,"\\n"],[10,"p"],[12],[2,"Ember defines its own global "],[10,"code"],[12],[2,"require"],[13],[2," function for requiring transpiled Ember modules from the application bundle, which overwrites Electron\'s "],[10,"code"],[12],[2,"require"],[13],[2," function that is used to require Node.js modules out of "],[10,"code"],[12],[2,"node_modules"],[13],[2," or by relative path."],[13],[2,"\\n"],[10,"p"],[12],[10,"code"],[12],[2,"ember-electron"],[13],[2," attempts to patch this up by implementing a "],[10,"code"],[12],[2,"require()"],[13],[2," function that tries both Ember\'s and Node.js\'s "],[10,"code"],[12],[2,"require()"],[13],[2," functions, but it\'s not perfect, so we recommend you use "],[10,"code"],[12],[2,"requireNode()"],[13],[2," when requiring Node.js modules."],[13],[2,"\\n"],[10,"p"],[12],[2,"Note that in order to be able to require node modules you\'ll need to enable node integration in "],[10,"code"],[12],[2,"electron-app/src/index.js"],[13],[2,":"],[13],[2,"\\n"],[10,"pre"],[14,0,"docs-md__code"],[12],[10,"code"],[14,0,"undefinedjavascript"],[12],[2,"mainWindow = "],[10,"span"],[14,0,"hljs-keyword"],[12],[2,"new"],[13],[2," BrowserWindow({\\n  "],[10,"span"],[14,0,"hljs-attr"],[12],[2,"width"],[13],[2,": "],[10,"span"],[14,0,"hljs-number"],[12],[2,"800"],[13],[2,",\\n  "],[10,"span"],[14,0,"hljs-attr"],[12],[2,"height"],[13],[2,": "],[10,"span"],[14,0,"hljs-number"],[12],[2,"600"],[13],[2,",\\n  "],[10,"span"],[14,0,"hljs-attr"],[12],[2,"webPreferences"],[13],[2,": {\\n    "],[10,"span"],[14,0,"hljs-attr"],[12],[2,"nodeIntegration"],[13],[2,": "],[10,"span"],[14,0,"hljs-literal"],[12],[2,"true"],[13],[2,",\\n  },\\n});"],[13],[13],[2,"\\n"],[10,"p"],[12],[2,"See the "],[10,"a"],[14,6,"https://www.electronjs.org/docs/api/browser-window"],[14,0,"docs-md__a"],[12],[2,"BrowserWindow documentation"],[13],[2," for more info, and Electron\'s "],[10,"a"],[14,6,"https://www.electronjs.org/docs/tutorial/security"],[14,0,"docs-md__a"],[12],[2,"security tutorial"],[13],[2," to understand the important security considerations when enabling node integration."],[13],[2,"\\n\\n      "],[10,"h2"],[14,1,"command-line-arguments"],[14,0,"docs-md__h2"],[12],[10,"a"],[14,6,"#command-line-arguments"],[14,0,"heading-anchor"],[12],[2,"Command-line arguments"],[13],[13],[2,"\\n    "],[10,"p"],[12],[2,"If your Electron app accepts command-line arguments that the main process handles via "],[10,"code"],[12],[2,"process.argv"],[13],[2,", then when running "],[10,"code"],[12],[2,"ember electron"],[13],[2," you need to precede them with "],[10,"code"],[12],[2,"---"],[13],[2,". This allows the "],[10,"code"],[12],[2,"ember electron"],[13],[2," to distinguish between its own arguments and arguments it should pass through when launching Electron:"],[13],[2,"\\n"],[10,"pre"],[14,0,"docs-md__code"],[12],[10,"code"],[14,0,"undefinedsh"],[12],[10,"span"],[14,0,"hljs-meta"],[12],[2,"$"],[13],[2," ember electron <ember electron args> --- <args to pass to Electron>"],[13],[13],[2,"\\n"],[10,"p"],[12],[2,"e.g."],[13],[2,"\\n"],[10,"pre"],[14,0,"docs-md__code"],[12],[10,"code"],[14,0,"undefinedsh"],[12],[10,"span"],[14,0,"hljs-meta"],[12],[2,"$"],[13],[2," ember electron --- --some-flags --that-my-app --handles-as=\\"process.argv\\""],[13],[13],[2,"\\n"],[10,"p"],[12],[2,"or"],[13],[2,"\\n"],[10,"pre"],[14,0,"docs-md__code"],[12],[10,"code"],[14,0,"undefinedsh"],[12],[10,"span"],[14,0,"hljs-meta"],[12],[2,"$"],[13],[2," ember electron --environment=production --- --some-flags --that-my-app --handles-as=\\"process.argv\\""],[13],[13],[2,"\\n\\n      "],[10,"h2"],[14,1,"ember-inspector-and-devtron"],[14,0,"docs-md__h2"],[12],[10,"a"],[14,6,"#ember-inspector-and-devtron"],[14,0,"heading-anchor"],[12],[2,"Ember Inspector and Devtron"],[13],[13],[2,"\\n    "],[10,"p"],[12],[10,"code"],[12],[2,"ember electron"],[13],[2," installs the Ember Inspector and Devtron directly into Electron, so they should be available if you open the dev tools."],[13],[2,"\\n\\n      "],[10,"h2"],[14,1,"developing-main-process-code"],[14,0,"docs-md__h2"],[12],[10,"a"],[14,6,"#developing-main-process-code"],[14,0,"heading-anchor"],[12],[2,"Developing main process code"],[13],[13],[2,"\\n    "],[10,"p"],[12],[10,"code"],[12],[2,"ember-electron"],[13],[2," does not restart your Electron app when main process code changes, so after making a code change you need to quit and re-launch your application. If you just run "],[10,"code"],[12],[2,"ember electron"],[13],[2," each time and you aren\'t changing any Ember code, you\'ll have to unnecessarily wait through the Ember build process that "],[10,"code"],[12],[2,"ember electron"],[13],[2," automatically runs. To avoid this, you can"],[13],[2,"\\n"],[10,"pre"],[14,0,"docs-md__code"],[12],[10,"code"],[14,0,"undefinedsh"],[12],[2,"ember build"],[13],[13],[2,"\\n"],[10,"p"],[12],[2,"which will build the Ember app and put the results inside the Electron app, making it a fully-built like "],[10,"code"],[12],[2,"electron forge"],[13],[2," expects. Then you can"],[13],[2,"\\n"],[10,"pre"],[14,0,"docs-md__code"],[12],[10,"code"],[14,0,"undefinedsh"],[12],[2,"cd electron-app\\nyarn start # or npm run start"],[13],[13],[2,"\\n"],[10,"p"],[12],[2,"which will run Electron forge\'s start script ("],[10,"code"],[12],[2,"electron-forge start"],[13],[2,"). When you need to quit and relaunch, you can just re-run the start script and skip the Ember build entirely."],[13],[2,"\\n"],[10,"p"],[12],[2,"Note that once you\'ve "],[10,"code"],[12],[2,"ember build"],[13],[2,"ed, you can also run the "],[10,"code"],[12],[2,"package"],[13],[2,", "],[10,"code"],[12],[2,"make"],[13],[2,", or "],[10,"code"],[12],[2,"start"],[13],[2," scripts, or any "],[10,"a"],[14,6,"https://www.electronforge.io/cli#commands"],[14,0,"docs-md__a"],[12],[2,"electron-forge commands"],[13],[2," you like, as you\'re in a fully set up "],[10,"code"],[12],[2,"electron-forge"],[13],[2," project."],[13],[2,"\\n\\n      "],[10,"h2"],[14,1,"debugging-the-main-process"],[14,0,"docs-md__h2"],[12],[10,"a"],[14,6,"#debugging-the-main-process"],[14,0,"heading-anchor"],[12],[2,"Debugging the Main Process"],[13],[13],[2,"\\n    "],[10,"p"],[12],[2,"Unless you\'re on really old Electron ("],[10,"code"],[12],[2,"<2"],[13],[2,"), you can "],[10,"a"],[14,6,"https://electron.atom.io/docs/tutorial/debugging-main-process/"],[14,0,"docs-md__a"],[12],[2,"debug the main process"],[13],[2," using the "],[10,"code"],[12],[2,"--inspect"],[13],[2,"/"],[10,"code"],[12],[2,"inspect-brk"],[13],[2," flags. The above syntax ("],[10,"code"],[12],[2,"---"],[13],[2,") can also be used to pass arguments to electron itself:"],[13],[2,"\\n"],[10,"pre"],[14,0,"docs-md__code"],[12],[10,"code"],[14,0,"undefinedsh"],[12],[10,"span"],[14,0,"hljs-meta"],[12],[2,"$"],[13],[2," ember electron --- --inspect-brk"],[13],[13],[2,"\\n"],[10,"p"],[12],[2,"or:"],[13],[2,"\\n"],[10,"pre"],[14,0,"docs-md__code"],[12],[10,"code"],[14,0,"undefinedsh"],[12],[10,"span"],[14,0,"hljs-meta"],[12],[2,"$"],[13],[2," ember electron --- --inspect-brk --some-flags --that-my-app --handles-as=\\"process.argv\\""],[13],[13],[2,"\\n"],[10,"p"],[12],[2,"Then, like when inspecting any Node.js process, open Chrome and navigate to "],[10,"code"],[12],[2,"chrome://inspect"],[13],[2,"."],[13],[13]],"hasEval":false,"upvars":[]}',moduleName:"dummy/templates/docs/guides/development-and-debugging.hbs"})
e.default=t})),define("dummy/templates/docs/guides/installation",["exports"],(function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=void 0
var t=Ember.HTMLBars.template({id:"nXJ3BlGM",block:'{"symbols":[],"statements":[[10,"div"],[14,0,"docs-md"],[12],[10,"h1"],[14,1,"installation-setup"],[14,0,"docs-md__h1"],[12],[2,"Installation & Setup"],[13],[2,"\\n    "],[10,"blockquote"],[14,0,"docs-md__blockquote"],[12],[10,"p"],[12],[2,"This addon requires at least Node 8 and "],[10,"code"],[12],[2,"ember-cli"],[13],[2," 3.4.0"],[13],[2,"\\n"],[13],[2,"\\n      "],[10,"h2"],[14,1,"installation"],[14,0,"docs-md__h2"],[12],[10,"a"],[14,6,"#installation"],[14,0,"heading-anchor"],[12],[2,"Installation"],[13],[13],[2,"\\n    "],[10,"pre"],[14,0,"docs-md__code"],[12],[10,"code"],[14,0,"undefinedsh"],[12],[2,"ember install ember-electron"],[13],[13],[2,"\\n"],[10,"p"],[12],[2,"This will install "],[10,"code"],[12],[2,"ember-electron"],[13],[2," and create and initialize an "],[10,"a"],[14,6,"https://www.electronforge.io/"],[14,0,"docs-md__a"],[12],[2,"electron-forge"],[13],[2," project in the "],[10,"code"],[12],[2,"electron-app"],[13],[2," directory inside your Ember app. Then you can run "],[10,"code"],[12],[2,"ember electron"],[13],[2," to launch your app in Electron."],[13],[2,"\\n\\n      "],[10,"h2"],[14,1,"upgrading"],[14,0,"docs-md__h2"],[12],[10,"a"],[14,6,"#upgrading"],[14,0,"heading-anchor"],[12],[2,"Upgrading"],[13],[13],[2,"\\n    "],[10,"p"],[12],[2,"See "],[10,"a"],[14,6,"./upgrading"],[14,0,"docs-md__a"],[12],[2,"Guides: Upgrading"],[13],[2," for information on how to upgrade from "],[10,"code"],[12],[2,"ember-electron"],[13],[2," 2.x."],[13],[13]],"hasEval":false,"upvars":[]}',moduleName:"dummy/templates/docs/guides/installation.hbs"})
e.default=t})),define("dummy/templates/docs/guides/structure",["exports"],(function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=void 0
var t=Ember.HTMLBars.template({id:"iQ6JcGcR",block:'{"symbols":[],"statements":[[10,"div"],[14,0,"docs-md"],[12],[10,"h1"],[14,1,"structure-of-an-ember-electron-app"],[14,0,"docs-md__h1"],[12],[2,"Structure of an ember-electron app"],[13],[2,"\\n    \\n      "],[10,"h2"],[14,1,"electron-apps"],[14,0,"docs-md__h2"],[12],[10,"a"],[14,6,"#electron-apps"],[14,0,"heading-anchor"],[12],[2,"Electron apps"],[13],[13],[2,"\\n    "],[10,"p"],[12],[2,"Electron apps consist of a main Node.js process that can spawn Chromium windows, called rendered processes, and load content into them. Those windows can load remote web pages, or local ones bundled with the Electron application, and they can be granted access to Node.js APIs so the code running in the browser windows can, for example, access the filesystem directly."],[13],[2,"\\n\\n      "],[10,"h2"],[14,1,"electron-forge"],[14,0,"docs-md__h2"],[12],[10,"a"],[14,6,"#electron-forge"],[14,0,"heading-anchor"],[12],[2,"Electron forge"],[13],[13],[2,"\\n    "],[10,"p"],[12],[10,"a"],[14,6,"https://www.electronforge.io/"],[14,0,"docs-md__a"],[12],[2,"electron-forge"],[13],[2," is a command-line interface for creating and managing Electron projects, analagous to "],[10,"code"],[12],[2,"ember-cli"],[13],[2," in the Ember ecosystem. You will not need to run "],[10,"code"],[12],[2,"electron-forge"],[13],[2," commands directly (although you can -- see below), but since most of the "],[10,"code"],[12],[2,"ember electron:*"],[13],[2," commands are wrappers for "],[10,"code"],[12],[2,"electron-forge"],[13],[2," commands, and "],[10,"code"],[12],[2,"electron-forge"],[13],[2," supports a very large set of configuration objects, it may be valuable to familiarize yourself with the basics of how "],[10,"code"],[12],[2,"electron-forge"],[13],[2," works."],[13],[2,"\\n\\n      "],[10,"h2"],[14,1,"ember-electron-apps"],[14,0,"docs-md__h2"],[12],[10,"a"],[14,6,"#ember-electron-apps"],[14,0,"heading-anchor"],[12],[2,"ember-electron apps"],[13],[13],[2,"\\n    "],[10,"p"],[12],[2,"A vanilla "],[10,"code"],[12],[2,"electron-forge"],[13],[2," project contains some main process code and some static web content -- html, css, and js files. "],[10,"code"],[12],[2,"ember-electron"],[13],[2," integrates Ember with Electron by creating an "],[10,"code"],[12],[2,"electron-forge"],[13],[2," project inside your Ember project with some boilerplate main process code, and dynamically generated web content."],[13],[2,"\\n"],[10,"p"],[12],[2,"The boilerplate code is set up to load web content from a directory called "],[10,"code"],[12],[2,"ember-dist"],[13],[2," that doesn\'t (initially) exist. When you run the various "],[10,"code"],[12],[2,"ember electron:*"],[13],[2," commands, they build your Ember app, put the result inside the "],[10,"code"],[12],[2,"ember-dist"],[13],[2," directory, and then use the "],[10,"code"],[12],[2,"electron-forge"],[13],[2," API to launch your app with the now-populated web content."],[13],[2,"\\n\\n      "],[10,"h3"],[14,1,"project-layout"],[14,0,"docs-md__h3"],[12],[10,"a"],[14,6,"#project-layout"],[14,0,"heading-anchor"],[12],[2,"Project layout"],[13],[13],[2,"\\n    "],[10,"p"],[12],[2,"When you first install "],[10,"code"],[12],[2,"ember-electron"],[13],[2,", the blueprint creates an "],[10,"code"],[12],[2,"electron-forge"],[13],[2," project in an "],[10,"code"],[12],[2,"electron-app"],[13],[2," folder. Here is layout of that project:"],[13],[2,"\\n"],[10,"pre"],[14,0,"docs-md__code"],[12],[10,"code"],[12],[2," my-app\\n ├── app\\n ├── tests\\n ├── public\\n ├── etc.\\n └── electron-app\\n     ├── package.json\\n     ├── node_modules\\n     ├── src\\n     │   │── handle-file-urls.js\\n     │   └── index.js\\n     ├── tests\\n     │   └── index.js\\n     ├── ember-dist\\n     │   └── <ember build output files>\\n     ├── ember-test\\n     │   └── <ember test build output files>\\n     └── out\\n         └── <output of package/make commands>"],[13],[13],[10,"p"],[12],[2,"When you run your app, the working directory ("],[10,"code"],[12],[2,"process.cwd()"],[13],[2,") is "],[10,"code"],[12],[2,"electron-app/"],[13],[2,", and the Ember app\'s Node.js require location is "],[10,"code"],[12],[2,"ember-dist"],[13],[2,", meaning that if you add "],[10,"code"],[12],[2,"src/some-lib.js"],[13],[2," and want to require it from your Ember code, you would "],[10,"code"],[12],[2,"requireNode(\'../src/some-lib.js\')"],[13],[2,"."],[13],[2,"\\n\\n      "],[10,"h3"],[14,1,"dependencies-a-tale-of-two-package-jsons"],[14,0,"docs-md__h3"],[12],[10,"a"],[14,6,"#dependencies-a-tale-of-two-package-jsons"],[14,0,"heading-anchor"],[12],[2,"Dependencies: a tale of two package.jsons"],[13],[13],[2,"\\n    "],[10,"p"],[12],[2,"Unlike "],[10,"code"],[12],[2,"ember-electron"],[13],[2," 2.x, the Electron app is a self-contained package, rather than being mixed in with the Ember app."],[13],[2,"\\n"],[10,"p"],[12],[10,"code"],[12],[2,"my-app/package.json"],[13],[2," should contain the dependencies needed for the Ember build -- all the standard Ember libraries and addons plus any that you want bundled into your application bundle. The packages specified in "],[10,"code"],[12],[2,"my-app/package.json"],[13],[2," will not be Node.js-requireable when you run your Electron application, but can only be accessed if they were injected into your Ember build using "],[10,"code"],[12],[2,"ember-auto-import"],[13],[2," or "],[10,"code"],[12],[2,"app.import()"],[13],[2," or the like."],[13],[2,"\\n"],[10,"p"],[12],[10,"code"],[12],[2,"my-app/electron-app/package.json"],[13],[2," should contain the dependencies needed for the Electron/"],[10,"code"],[12],[2,"electron-forge"],[13],[2," build plus any packages needed at runtime that you want to Node.js-require from the main process, or from your Ember app via "],[10,"code"],[12],[2,"requireNode"],[13],[2,"."],[13],[2,"\\n"],[10,"p"],[12],[2,"Generally speaking:"],[13],[2,"\\n\\n        "],[10,"ul"],[14,0,"docs-list-disc"],[12],[10,"li"],[12],[10,"code"],[12],[2,"my-app/package.json#devDependencies"],[13],[2,":"],[13],[2,"\\n"],[10,"li"],[12],[2,"\\n        "],[10,"ul"],[14,0,"docs-list-disc"],[12],[10,"li"],[12],[2,"packages needed to perform the Ember build"],[13],[2,"\\n"],[13],[2,"\\n      "],[13],[2,"\\n"],[10,"li"],[12],[2,"\\n        "],[10,"ul"],[14,0,"docs-list-disc"],[12],[10,"li"],[12],[2,"packages that contribute non-Node.js code used from the Ember app at runtime"],[13],[2,"\\n"],[13],[2,"\\n      "],[13],[2,"\\n"],[10,"li"],[12],[2,"\\n        "],[10,"ul"],[14,0,"docs-list-disc"],[12],[10,"li"],[12],[2,"packages used for testing the Ember app"],[13],[2,"\\n"],[13],[2,"\\n      "],[13],[2,"\\n"],[10,"li"],[12],[10,"code"],[12],[2,"my-app/package.json#dependencies"],[13],[2,":"],[13],[2,"\\n"],[10,"li"],[12],[2,"\\n        "],[10,"ul"],[14,0,"docs-list-disc"],[12],[10,"li"],[12],[2,"generally empty"],[13],[2,"\\n"],[13],[2,"\\n      "],[13],[2,"\\n"],[10,"li"],[12],[10,"code"],[12],[2,"my-app/electron-app/package.json#devDependencies"],[13],[2,":"],[13],[2,"\\n"],[10,"li"],[12],[2,"\\n        "],[10,"ul"],[14,0,"docs-list-disc"],[12],[10,"li"],[12],[10,"code"],[12],[2,"electron-forge"],[13],[2," and related packages needed to perform the Electron build"],[13],[2,"\\n"],[13],[2,"\\n      "],[13],[2,"\\n"],[10,"li"],[12],[2,"\\n        "],[10,"ul"],[14,0,"docs-list-disc"],[12],[10,"li"],[12],[2,"packages needed for testing the main process"],[13],[2,"\\n"],[13],[2,"\\n      "],[13],[2,"\\n"],[10,"li"],[12],[10,"code"],[12],[2,"my-app/electron-app/package.json#dependencies"],[13],[2,":"],[13],[2,"\\n"],[10,"li"],[12],[2,"\\n        "],[10,"ul"],[14,0,"docs-list-disc"],[12],[10,"li"],[12],[2,"packages "],[10,"code"],[12],[2,"require"],[13],[2,"ed by the main process at runtime"],[13],[2,"\\n"],[13],[2,"\\n      "],[13],[2,"\\n"],[10,"li"],[12],[2,"\\n        "],[10,"ul"],[14,0,"docs-list-disc"],[12],[10,"li"],[12],[2,"packages "],[10,"code"],[12],[2,"requireNode"],[13],[2,"ed by the Ember app (with "],[10,"code"],[12],[2,"nodeIntegration: true"],[13],[2,") at runtime"],[13],[2,"\\n"],[13],[2,"\\n      "],[13],[2,"\\n"],[13],[13]],"hasEval":false,"upvars":[]}',moduleName:"dummy/templates/docs/guides/structure.hbs"})
e.default=t})),define("dummy/templates/docs/guides/upgrading",["exports"],(function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=void 0
var t=Ember.HTMLBars.template({id:"xBEg9xM/",block:'{"symbols":[],"statements":[[10,"div"],[14,0,"docs-md"],[12],[10,"h1"],[14,1,"upgrading-from-ember-electron-2-x"],[14,0,"docs-md__h1"],[12],[2,"Upgrading from ember-electron 2.x"],[13],[2,"\\n    "],[10,"p"],[12],[2,"While upgrading from 2.x to 3.x should not be very time-consuming in most cases, quite a bit has changed, so you should follow these steps in order to be successful. Starting from a clean tree (so you can run a clean "],[10,"code"],[12],[2,"git diff"],[13],[2," afterwards to see what changed), the recommended steps are:"],[13],[2,"\\n\\n      "],[10,"h2"],[14,1,"upgrade-ember-electron"],[14,0,"docs-md__h2"],[12],[10,"a"],[14,6,"#upgrade-ember-electron"],[14,0,"heading-anchor"],[12],[2,"Upgrade ember electron"],[13],[13],[2,"\\n    "],[10,"pre"],[14,0,"docs-md__code"],[12],[10,"code"],[14,0,"undefinedsh"],[12],[2,"yarn-or-npm remove ember-electron\\nember install ember-electron"],[13],[13],[2,"\\n"],[10,"p"],[12],[2,"When prompted to overwrite "],[10,"code"],[12],[2,"testem-electron.js"],[13],[2,", choose "],[10,"code"],[12],[2,"yes"],[13],[2,"."],[13],[2,"\\n\\n      "],[10,"h2"],[14,1,"fix-electron-version"],[14,0,"docs-md__h2"],[12],[10,"a"],[14,6,"#fix-electron-version"],[14,0,"heading-anchor"],[12],[2,"Fix electron version"],[13],[13],[2,"\\n    "],[10,"p"],[12],[2,"Your "],[10,"code"],[12],[2,"electron-app"],[13],[2," project will initially have the most recent release of Electron installed. You were probably running an older version since it was very difficult to run newer than Electron 4.x with "],[10,"code"],[12],[2,"ember-electron"],[13],[2," 2.x. So if you don\'t want to deal with upgrading Electron in the middle of upgrading "],[10,"code"],[12],[2,"ember-electron"],[13],[2,", you should change your "],[10,"code"],[12],[2,"electron-app/package.json"],[13],[2,"\'s "],[10,"code"],[12],[2,"electron"],[13],[2," version to match the version of "],[10,"code"],[12],[2,"electron-prebuilt-compile"],[13],[2," (which would determine the Electron version you were running) that is in your root "],[10,"code"],[12],[2,"package.json"],[13],[2,". Don\'t forget to run "],[10,"code"],[12],[2,"yarn"],[13],[2,"/"],[10,"code"],[12],[2,"npm install"],[13],[2," from "],[10,"code"],[12],[2,"electron-app"],[13],[2," afterwards!"],[13],[2,"\\n"],[10,"p"],[12],[2,"The good news is that now upgrading Electron just involves updating the version installed in the "],[10,"code"],[12],[2,"electron-app"],[13],[2," package -- no more waiting for "],[10,"code"],[12],[2,"electron-prebuilt-compile"],[13],[2," to release an update matching the latest Electron version!"],[13],[2,"\\n\\n      "],[10,"h2"],[14,1,"clean-up-package-json"],[14,0,"docs-md__h2"],[12],[10,"a"],[14,6,"#clean-up-package-json"],[14,0,"heading-anchor"],[12],[2,"Clean up package.json"],[13],[13],[2,"\\n    "],[10,"p"],[12],[2,"When installing "],[10,"code"],[12],[2,"ember-electron"],[13],[2," 2.x, a number of entries were added to your "],[10,"code"],[12],[2,"package.json"],[13],[2," that can now be safely removed:"],[13],[2,"\\n"],[10,"p"],[12],[10,"code"],[12],[2,"devDependencies"],[13],[2,":"],[13],[2,"\\n\\n        "],[10,"ul"],[14,0,"docs-list-disc"],[12],[10,"li"],[12],[10,"code"],[12],[2,"babel-plugin-transform-async-to-generator"],[13],[13],[2,"\\n"],[10,"li"],[12],[10,"code"],[12],[2,"babel-preset-env"],[13],[13],[2,"\\n"],[10,"li"],[12],[10,"code"],[12],[2,"babel-preset-react"],[13],[13],[2,"\\n"],[10,"li"],[12],[10,"code"],[12],[2,"devtron"],[13],[13],[2,"\\n"],[10,"li"],[12],[10,"code"],[12],[2,"electron-forge"],[13],[13],[2,"\\n"],[10,"li"],[12],[10,"code"],[12],[2,"electron-prebuilt-compile"],[13],[13],[2,"\\n"],[10,"li"],[12],[10,"code"],[12],[2,"ember-inspector"],[13],[13],[2,"\\n"],[13],[2,"\\n      "],[10,"p"],[12],[10,"code"],[12],[2,"dependencies"],[13],[2,":"],[13],[2,"\\n\\n        "],[10,"ul"],[14,0,"docs-list-disc"],[12],[10,"li"],[12],[10,"code"],[12],[2,"electron-compile"],[13],[13],[2,"\\n"],[10,"li"],[12],[10,"code"],[12],[2,"electron-protocol-serve"],[13],[13],[2,"\\n"],[10,"li"],[12],[10,"code"],[12],[2,"electron-squirrel-startup"],[13],[13],[2,"\\n"],[13],[2,"\\n      "],[10,"p"],[12],[2,"and also the old "],[10,"code"],[12],[2,"electron-forge"],[13],[2," configuration:"],[13],[2,"\\n"],[10,"pre"],[14,0,"docs-md__code"],[12],[10,"code"],[12],[2,"\\"config\\": {\\n  \\"forge\\": \\"./ember-electron/electron-forge-config.js\\"\\n}"],[13],[13],[2,"\\n      "],[10,"h2"],[14,1,"migrate-node-js-packages"],[14,0,"docs-md__h2"],[12],[10,"a"],[14,6,"#migrate-node-js-packages"],[14,0,"heading-anchor"],[12],[2,"Migrate Node.js packages"],[13],[13],[2,"\\n    "],[10,"p"],[12],[2,"As described in "],[10,"a"],[14,6,"./structure"],[14,0,"docs-md__a"],[12],[2,"Guides: Structure"],[13],[2,", "],[10,"code"],[12],[2,"ember-electron"],[13],[2," 3.x differs from 2.x in that it doesn\'t mix the Electron app\'s "],[10,"code"],[12],[2,"package.json"],[13],[2," with the Ember app\'s "],[10,"code"],[12],[2,"package.json"],[13],[2,". So you\'ll need to identify any packages in your root "],[10,"code"],[12],[2,"package.json"],[13],[2," that are either "],[10,"code"],[12],[2,"require()"],[13],[2,"ed by your Electron main process code, or "],[10,"code"],[12],[2,"requireNode"],[13],[2,"ed by your Ember app and move or copy them into "],[10,"code"],[12],[2,"electron-app/package.json"],[13],[2,"."],[13],[2,"\\n\\n      "],[10,"h2"],[14,1,"migrate-main-process-node-js-files"],[14,0,"docs-md__h2"],[12],[10,"a"],[14,6,"#migrate-main-process-node-js-files"],[14,0,"heading-anchor"],[12],[2,"Migrate main process/Node.js files"],[13],[13],[2,"\\n    "],[10,"p"],[12],[2,"You will now have an "],[10,"code"],[12],[2,"electron-app"],[13],[2," folder with default vanilla content side-by-side with your "],[10,"code"],[12],[2,"ember-electron"],[13],[2," folder that stored your main process/Node.js files. So your next step is to migrate the contents of "],[10,"code"],[12],[2,"ember-electron"],[13],[2," over to "],[10,"code"],[12],[2,"electron-app"],[13],[2,"."],[13],[2,"\\n\\n      "],[10,"h3"],[14,1,"electron-forge-config-js"],[14,0,"docs-md__h3"],[12],[10,"a"],[14,6,"#electron-forge-config-js"],[14,0,"heading-anchor"],[12],[2,"electron-forge-config.js"],[13],[13],[2,"\\n    "],[10,"p"],[12],[2,"By default "],[10,"code"],[12],[2,"electron-forge"],[13],[2," puts the configuration inline in "],[10,"code"],[12],[2,"package.json"],[13],[2,", but still supports the external configuration. So you can either migrate the content of your "],[10,"code"],[12],[2,"electron-forge-config.js"],[13],[2," into "],[10,"code"],[12],[2,"package.json"],[13],[2,":"],[13],[2,"\\n"],[10,"pre"],[14,0,"docs-md__code"],[12],[10,"code"],[12],[2,"\\"config\\": {\\n  \\"forge\\": {\\n    \\"config goes\\": \\"here\\"\\n  }\\n}"],[13],[13],[10,"p"],[12],[2,"or move your "],[10,"code"],[12],[2,"electron-forge-config.js"],[13],[2," from "],[10,"code"],[12],[2,"ember-electron"],[13],[2," to "],[10,"code"],[12],[2,"electron-app"],[13],[2," and then replace the "],[10,"code"],[12],[2,"config"],[13],[2," key in "],[10,"code"],[12],[2,"electron-app/package.json"],[13],[2," with"],[13],[2,"\\n"],[10,"pre"],[14,0,"docs-md__code"],[12],[10,"code"],[12],[2,"\\"config\\": {\\n  \\"forge\\": \\"./electron-forge-config.js\\"\\n}"],[13],[13],[10,"p"],[12],[2,"Either way, you will need to update the configuration since the format has changed somewhat since the version of "],[10,"code"],[12],[2,"electron-forge"],[13],[2," that "],[10,"code"],[12],[2,"ember-electron"],[13],[2," 2.x used. Comparing your old configuration with the vanilla generated configuration in "],[10,"code"],[12],[2,"electron-app/package.json"],[13],[2," should help, and "],[10,"code"],[12],[2,"electron-forge"],[13],[2,"\'s "],[10,"a"],[14,6,"https://www.electronforge.io/configuration"],[14,0,"docs-md__a"],[12],[2,"configuration documentation"],[13],[2," will help you through the process. Note also that the version of "],[10,"code"],[12],[2,"electron-packager"],[13],[2," uses changed from v11 to v14, and various maker packages were also updated, so there may be other configuration changes needed to be able to package/make with "],[10,"code"],[12],[2,"ember-electron"],[13],[2," 3.x."],[13],[2,"\\n\\n      "],[10,"h3"],[14,1,"main-js"],[14,0,"docs-md__h3"],[12],[10,"a"],[14,6,"#main-js"],[14,0,"heading-anchor"],[12],[2,"main.js"],[13],[13],[2,"\\n    "],[10,"p"],[12],[2,"The equivalent of "],[10,"code"],[12],[2,"ember-electron/main.js"],[13],[2," is "],[10,"code"],[12],[2,"electron-app/src/index.js"],[13],[2,", so you\'ll want to put the contents of your "],[10,"code"],[12],[2,"main.js"],[13],[2," there (note that "],[10,"code"],[12],[2,"src/index.js"],[13],[2," is specified by the "],[10,"code"],[12],[2,"main"],[13],[2," entry in "],[10,"code"],[12],[2,"electron-app/package.json"],[13],[2,", so you can name it whatever/put it wherever you want as long as you update the "],[10,"code"],[12],[2,"main"],[13],[2," entry accordingly). Because the Electron project structure differs a little from "],[10,"code"],[12],[2,"ember-electron"],[13],[2," 2.x\'s, you\'ll need to replace anywhere you reference the path to the Ember application directory ("],[10,"code"],[12],[2,"../ember"],[13],[2,") with the new path ("],[10,"code"],[12],[2,"../ember-dist"],[13],[2,")."],[13],[2,"\\n\\n      "],[10,"h3"],[14,1,"test-main-js"],[14,0,"docs-md__h3"],[12],[10,"a"],[14,6,"#test-main-js"],[14,0,"heading-anchor"],[12],[2,"test-main.js"],[13],[13],[2,"\\n    "],[10,"p"],[12],[2,"Generally you should not need to migrate "],[10,"code"],[12],[2,"test-main.js"],[13],[2," at all. Its default content in 2.x was:"],[13],[2,"\\n"],[10,"pre"],[14,0,"docs-md__code"],[12],[10,"code"],[14,0,"undefinedjavascript"],[12],[10,"span"],[14,0,"hljs-comment"],[12],[2,"/* eslint-env node */"],[13],[2,"\\n"],[10,"span"],[14,0,"hljs-built_in"],[12],[2,"require"],[13],[2,"("],[10,"span"],[14,0,"hljs-string"],[12],[2,"\'ember-electron/lib/test-support/test-main\'"],[13],[2,");"],[13],[13],[2,"\\n"],[10,"p"],[12],[2,"If yours still looks like that, then you don\'t need to do anything. If you\'ve customized it, then you\'ll need to migrate the content to "],[10,"code"],[12],[2,"electron-app/tests/index.js"],[13],[13],[2,"\\n\\n      "],[10,"h3"],[14,1,"resources-folders"],[14,0,"docs-md__h3"],[12],[10,"a"],[14,6,"#resources-folders"],[14,0,"heading-anchor"],[12],[2,"resources-* folders"],[13],[13],[2,"\\n    "],[10,"p"],[12],[2,"If you don\'t have any files in any of the "],[10,"code"],[12],[2,"ember-electron/resources"],[13],[2," or "],[10,"code"],[12],[2,"ember-electron/resources-*"],[13],[2," folders, you can skip this section."],[13],[2,"\\n"],[10,"p"],[12],[10,"code"],[12],[2,"ember-electron"],[13],[2," 2.x managed the "],[10,"code"],[12],[2,"resources-*"],[13],[2," folders to allow you to specify platform-specific resources. "],[10,"code"],[12],[2,"electron-forge"],[13],[2," does not support this functionality, and it was one of the main factors contributing to the complexity and slowness of "],[10,"code"],[12],[2,"ember-electron"],[13],[2," 2.x\'s build pipeline, so it\'s been removed in 3.x."],[13],[2,"\\n"],[10,"p"],[12],[2,"So if you only have content in ember-electron/resources/, you can copy the folder into electron-app and ignore the other ember-electron/resources-* folders. Note that "],[10,"code"],[12],[2,"src/index.js"],[13],[2," is now in a subfolder, unlike "],[10,"code"],[12],[2,"main.js"],[13],[2," was in 2.x, so if you are accessing resources from your main process using, e.g., "],[10,"code"],[12],[2,"path.join(__dirname, \'resources\')"],[13],[2,", you\'ll have to update it to "],[10,"code"],[12],[2,"path.join(__dirname, \'..\', \'resources\')"],[13],[2," (or you could put the "],[10,"code"],[12],[2,"resources"],[13],[2," folder in the "],[10,"code"],[12],[2,"src/"],[13],[2," directory if you like, although many folks prefer to not mix their code with non-code resources.)"],[13],[2,"\\n"],[10,"p"],[12],[2,"If you do have content in the platform-specific "],[10,"code"],[12],[2,"resources-*"],[13],[2," folders, you can choose between them at runtime, e.g. put your platform-specific resources in "],[10,"code"],[12],[2,"resources/win32"],[13],[2,", "],[10,"code"],[12],[2,"resources/darwin"],[13],[2,", and "],[10,"code"],[12],[2,"resources-linux"],[13],[2," and:"],[13],[2,"\\n"],[10,"pre"],[14,0,"docs-md__code"],[12],[10,"code"],[14,0,"undefinedjavascript"],[12],[10,"span"],[14,0,"hljs-keyword"],[12],[2,"let"],[13],[2," resourcePath = path.join("],[10,"span"],[14,0,"hljs-string"],[12],[2,"\'..\'"],[13],[2,", "],[10,"span"],[14,0,"hljs-string"],[12],[2,"\'resources\'"],[13],[2,", process.platform, "],[10,"span"],[14,0,"hljs-string"],[12],[2,"\'thing.json.txt\'"],[13],[2,");"],[13],[13],[2,"\\n"],[10,"p"],[12],[2,"If you need to exclude files for other platforms from your packaged build, you can use "],[10,"code"],[12],[2,"electron-forge"],[13],[2,"\'s hooks, such as "],[10,"a"],[14,6,"https://www.electronforge.io/configuration#packageaftercopy"],[14,0,"docs-md__a"],[12],[2,"packageAfterCopy"],[13],[2," (but note that these will only run when running "],[10,"code"],[12],[2,"ember electron:package"],[13],[2," or "],[10,"code"],[12],[2,"ember electron:make"],[13],[2,", not "],[10,"code"],[12],[2,"ember electron"],[13],[2," which runs directly out of your source tree)."],[13],[2,"\\n\\n      "],[10,"h3"],[14,1,"code-files-etc"],[14,0,"docs-md__h3"],[12],[10,"a"],[14,6,"#code-files-etc"],[14,0,"heading-anchor"],[12],[2,"code/files/etc"],[13],[13],[2,"\\n    "],[10,"p"],[12],[2,"Anything else that was in the "],[10,"code"],[12],[2,"ember-electron"],[13],[2," in 2.x should be \\"just files\\" -- "],[10,"code"],[12],[2,".js"],[13],[2," files "],[10,"code"],[12],[2,"require"],[13],[2,"d from the main process or "],[10,"code"],[12],[2,"requireNode"],[13],[2,"d from the Ember app, or other files accessed via the filesystem APIs. So these can be migrated into "],[10,"code"],[12],[2,"electron-app"],[13],[2," however seems best, updating the references to their paths in other source files as needed."],[13],[2,"\\n\\n      "],[10,"h3"],[14,1,"electron-protocol-serve"],[14,0,"docs-md__h3"],[12],[10,"a"],[14,6,"#electron-protocol-serve"],[14,0,"heading-anchor"],[12],[2,"electron-protocol-serve"],[13],[13],[2,"\\n    "],[10,"p"],[12],[2,"Since 2.x, we have removed "],[10,"code"],[12],[2,"electron-protocol-serve"],[13],[2," from the default blueprint in favor of loading the Ember app using "],[10,"code"],[12],[2,"file:"],[13],[2," URLs. \\nThe instructions above should get you set up to run properly, but if your app has any references/assumptions around the URL used to load the Ember app, you\'ll need to update them. \\nIf you added "],[10,"code"],[12],[2,"webSecurity: false"],[13],[2," to work around issues caused by "],[10,"code"],[12],[2,"electron-protocol-serve"],[13],[2," (as described "],[10,"a"],[14,6,"/versions/v2.10.2/docs/faq/common-issues#what-is-electron-protocol-serve-and-why-do-i-need-this-"],[14,0,"docs-md__a"],[12],[2,"here"],[13],[2,") you should be able to remove it now."],[13],[2,"\\n"],[10,"p"],[12],[2,"Another effect of switching from "],[10,"code"],[12],[2,"serve:"],[13],[2," URLs to "],[10,"code"],[12],[2,"file:"],[13],[2," URLs is that you may need to migrate data stored in browser storage such as "],[10,"code"],[12],[2,"localStorage"],[13],[2," or "],[10,"code"],[12],[2,"IndexedDB"],[13],[2," or your users could experience data loss. \\nIf a user has been running a version of your application that uses "],[10,"code"],[12],[2,"serve:"],[13],[2," URLs, then the browser will have any such data associated with the "],[10,"code"],[12],[2,"serve://dist"],[13],[2," domain, and the browser\'s security measures to prevent one site from accessing another site\'s will prevent your app, which accessed via a "],[10,"code"],[12],[2,"file:"],[13],[2," URL, from accessing the previously-created data."],[13],[2,"\\n"],[10,"p"],[12],[2,"Unfortunately, Electron doesn\'t currently provide any mechanisms to address this, so if your application has stored any \\nsuch data on users\' systems, and it\'s critical that it remain intact when the user updates to a version of the application \\nthat uses "],[10,"code"],[12],[2,"file:"],[13],[2," URLs, you\'ll have to migrate it. The following are examples of how you might migrate data for "],[10,"code"],[12],[2,"localStorage"],[13],[2," or "],[10,"code"],[12],[2,"IndexedDB"],[13],[2,"."],[13],[2,"\\n\\n      "],[10,"h4"],[14,1,"localstorage-migration"],[14,0,"docs-md__h4"],[12],[10,"a"],[14,6,"#localstorage-migration"],[14,0,"heading-anchor"],[12],[2,"localStorage migration"],[13],[13],[2,"\\n    "],[10,"pre"],[14,0,"docs-md__code"],[12],[10,"code"],[14,0,"undefinedjavascript"],[12],[10,"span"],[14,0,"hljs-comment"],[12],[2,"// src/index.js"],[13],[2,"\\n"],[10,"span"],[14,0,"hljs-keyword"],[12],[2,"const"],[13],[2," { protocol, BrowserWindow } = "],[10,"span"],[14,0,"hljs-built_in"],[12],[2,"require"],[13],[2,"("],[10,"span"],[14,0,"hljs-string"],[12],[2,"\'electron\'"],[13],[2,");\\n"],[10,"span"],[14,0,"hljs-keyword"],[12],[2,"const"],[13],[2," { "],[10,"span"],[14,0,"hljs-attr"],[12],[2,"promises"],[13],[2,": { writeFile } } = "],[10,"span"],[14,0,"hljs-built_in"],[12],[2,"require"],[13],[2,"("],[10,"span"],[14,0,"hljs-string"],[12],[2,"\'fs\'"],[13],[2,");\\n"],[10,"span"],[14,0,"hljs-keyword"],[12],[2,"const"],[13],[2," { fileSync } = "],[10,"span"],[14,0,"hljs-built_in"],[12],[2,"require"],[13],[2,"("],[10,"span"],[14,0,"hljs-string"],[12],[2,"\'tmp\'"],[13],[2,");\\n\\n"],[10,"span"],[14,0,"hljs-function"],[12],[10,"span"],[14,0,"hljs-keyword"],[12],[2,"function"],[13],[2," "],[10,"span"],[14,0,"hljs-title"],[12],[2,"needsMigration"],[13],[2,"("],[10,"span"],[14,0,"hljs-params"],[12],[13],[2,") "],[13],[2,"{\\n  "],[10,"span"],[14,0,"hljs-comment"],[12],[2,"// You\'ll want some way of determining if the migration has already happened,"],[13],[2,"\\n  "],[10,"span"],[14,0,"hljs-comment"],[12],[2,"// the when the app starts it doesn\'t always re-copy the data from the"],[13],[2,"\\n  "],[10,"span"],[14,0,"hljs-comment"],[12],[2,"// `serve://dist`-scoped, overwriting any changes the user has since made to"],[13],[2,"\\n  "],[10,"span"],[14,0,"hljs-comment"],[12],[2,"// the `file:`-scoped data. For example, you might use `electron-store` to"],[13],[2,"\\n  "],[10,"span"],[14,0,"hljs-comment"],[12],[2,"// keep track of whether you\'ve run the migration or not.  "],[13],[2,"\\n}\\n\\n"],[10,"span"],[14,0,"hljs-keyword"],[12],[2,"if"],[13],[2," (needsMigration()) {\\n  "],[10,"span"],[14,0,"hljs-comment"],[12],[2,"// Register the `serve:` scheme as privileged, like `electron-protocol-serve`"],[13],[2,"\\n  "],[10,"span"],[14,0,"hljs-comment"],[12],[2,"// does. This enables access to browser storage from pages loaded via the"],[13],[2,"\\n  "],[10,"span"],[14,0,"hljs-comment"],[12],[2,"// `serve:` protocol. This needs to be done before the app\'s `ready` event."],[13],[2,"\\n  protocol.registerSchemesAsPrivileged([\\n    {\\n      "],[10,"span"],[14,0,"hljs-attr"],[12],[2,"scheme"],[13],[2,": "],[10,"span"],[14,0,"hljs-string"],[12],[2,"\'serve\'"],[13],[2,",\\n      "],[10,"span"],[14,0,"hljs-attr"],[12],[2,"privileges"],[13],[2,": {\\n        "],[10,"span"],[14,0,"hljs-attr"],[12],[2,"secure"],[13],[2,": "],[10,"span"],[14,0,"hljs-literal"],[12],[2,"true"],[13],[2,",\\n        "],[10,"span"],[14,0,"hljs-attr"],[12],[2,"standard"],[13],[2,": "],[10,"span"],[14,0,"hljs-literal"],[12],[2,"true"],[13],[2,"\\n      }\\n    }\\n  ]);\\n\\n  app.on("],[10,"span"],[14,0,"hljs-string"],[12],[2,"\'ready\'"],[13],[2,", "],[10,"span"],[14,0,"hljs-keyword"],[12],[2,"async"],[13],[2," () => {\\n    "],[10,"span"],[14,0,"hljs-comment"],[12],[2,"// Set up a protocol handler to return empty HTML from any request to"],[13],[2,"\\n    "],[10,"span"],[14,0,"hljs-comment"],[12],[2,"// `serve:` URLs, so we can load `serve://dist` in a browser window and use"],[13],[2,"\\n    "],[10,"span"],[14,0,"hljs-comment"],[12],[2,"// it to access localStorage"],[13],[2,"\\n    protocol.registerStringProtocol("],[10,"span"],[14,0,"hljs-string"],[12],[2,"\'serve\'"],[13],[2,", "],[10,"span"],[14,0,"hljs-function"],[12],[2,"("],[10,"span"],[14,0,"hljs-params"],[12],[2,"request, callback"],[13],[2,") =>"],[13],[2," {\\n      callback({ "],[10,"span"],[14,0,"hljs-attr"],[12],[2,"mimeType"],[13],[2,": "],[10,"span"],[14,0,"hljs-string"],[12],[2,"\'text/html\'"],[13],[2,", "],[10,"span"],[14,0,"hljs-attr"],[12],[2,"data"],[13],[2,": "],[10,"span"],[14,0,"hljs-string"],[12],[2,"\'<html></html>\'"],[13],[2," });\\n    });\\n\\n    "],[10,"span"],[14,0,"hljs-comment"],[12],[2,"// Navigate to our empty page in a hidden browser window"],[13],[2,"\\n    "],[10,"span"],[14,0,"hljs-keyword"],[12],[2,"let"],[13],[2," "],[10,"span"],[14,0,"hljs-built_in"],[12],[2,"window"],[13],[2," = "],[10,"span"],[14,0,"hljs-keyword"],[12],[2,"new"],[13],[2," BrowserWindow({ "],[10,"span"],[14,0,"hljs-attr"],[12],[2,"show"],[13],[2,": "],[10,"span"],[14,0,"hljs-literal"],[12],[2,"false"],[13],[2," });\\n    "],[10,"span"],[14,0,"hljs-keyword"],[12],[2,"try"],[13],[2," {\\n      "],[10,"span"],[14,0,"hljs-keyword"],[12],[2,"await"],[13],[2," "],[10,"span"],[14,0,"hljs-built_in"],[12],[2,"window"],[13],[2,".loadURL("],[10,"span"],[14,0,"hljs-string"],[12],[2,"\'serve://dist\'"],[13],[2,");\\n\\n      "],[10,"span"],[14,0,"hljs-comment"],[12],[2,"// Get a JSON-stringified version of this origin\'s entire localStorage"],[13],[2,"\\n      "],[10,"span"],[14,0,"hljs-keyword"],[12],[2,"let"],[13],[2," localStorageJson = "],[10,"span"],[14,0,"hljs-keyword"],[12],[2,"await"],[13],[2," "],[10,"span"],[14,0,"hljs-built_in"],[12],[2,"window"],[13],[2,".webContents.executeJavaScript("],[10,"span"],[14,0,"hljs-string"],[12],[2,"\'JSON.stringify(window.localStorage)\'"],[13],[2,");\\n\\n      "],[10,"span"],[14,0,"hljs-comment"],[12],[2,"// Create an empty HTML file in a temporary location that we can load via a"],[13],[2,"\\n      "],[10,"span"],[14,0,"hljs-comment"],[12],[2,"// `file:` URL so we can write our values to the `file:`-scoped localStorage."],[13],[2,"\\n      "],[10,"span"],[14,0,"hljs-comment"],[12],[2,"// We don\'t do this with a protocol handler because we don\'t want to mess"],[13],[2,"\\n      "],[10,"span"],[14,0,"hljs-comment"],[12],[2,"// with how `file:` URLs are handled, as it could cause problems when we"],[13],[2,"\\n      "],[10,"span"],[14,0,"hljs-comment"],[12],[2,"// actually load Ember app over a `file:` URL."],[13],[2,"\\n      "],[10,"span"],[14,0,"hljs-keyword"],[12],[2,"let"],[13],[2," tempFile = fileSync();\\n      "],[10,"span"],[14,0,"hljs-keyword"],[12],[2,"await"],[13],[2," writeFile(tempFile.name, "],[10,"span"],[14,0,"hljs-string"],[12],[2,"\'<html></html>\'"],[13],[2,");\\n      "],[10,"span"],[14,0,"hljs-keyword"],[12],[2,"await"],[13],[2," "],[10,"span"],[14,0,"hljs-built_in"],[12],[2,"window"],[13],[2,".loadFile(tempFile.name);\\n\\n      "],[10,"span"],[14,0,"hljs-comment"],[12],[2,"// Iterate over the values and set them in file:\'s localStorage"],[13],[2,"\\n      "],[10,"span"],[14,0,"hljs-keyword"],[12],[2,"for"],[13],[2," ("],[10,"span"],[14,0,"hljs-keyword"],[12],[2,"let"],[13],[2," [ key, value ] "],[10,"span"],[14,0,"hljs-keyword"],[12],[2,"of"],[13],[2," "],[10,"span"],[14,0,"hljs-built_in"],[12],[2,"Object"],[13],[2,".entries("],[10,"span"],[14,0,"hljs-built_in"],[12],[2,"JSON"],[13],[2,".parse(localStorageJson))) {\\n        "],[10,"span"],[14,0,"hljs-keyword"],[12],[2,"await"],[13],[2," "],[10,"span"],[14,0,"hljs-built_in"],[12],[2,"window"],[13],[2,".webContents.executeJavaScript("],[10,"span"],[14,0,"hljs-string"],[12],[2,"`window.localStorage.setItem(\'"],[10,"span"],[14,0,"hljs-subst"],[12],[2,"${key}"],[13],[2,"\', \'"],[10,"span"],[14,0,"hljs-subst"],[12],[2,"${value}"],[13],[2,"\')`"],[13],[2,");\\n      }\\n    } "],[10,"span"],[14,0,"hljs-keyword"],[12],[2,"finally"],[13],[2," {\\n      "],[10,"span"],[14,0,"hljs-built_in"],[12],[2,"window"],[13],[2,".destroy();\\n    }\\n  });\\n}"],[13],[13],[2,"\\n\\n      "],[10,"h4"],[14,1,"indexeddb-migration"],[14,0,"docs-md__h4"],[12],[10,"a"],[14,6,"#indexeddb-migration"],[14,0,"heading-anchor"],[12],[2,"IndexedDB migration"],[13],[13],[2,"\\n    "],[10,"p"],[12],[2,"For migrating "],[10,"code"],[12],[2,"IndexedDB"],[13],[2," data, we are going to use the "],[10,"code"],[12],[2,"indexeddb-export-import"],[13],[2," package to assist us."],[13],[2,"\\n"],[10,"pre"],[14,0,"docs-md__code"],[12],[10,"code"],[14,0,"undefinedjavascript"],[12],[10,"span"],[14,0,"hljs-comment"],[12],[2,"// src/index.js"],[13],[2,"\\n"],[10,"span"],[14,0,"hljs-keyword"],[12],[2,"const"],[13],[2," { protocol, BrowserWindow } = "],[10,"span"],[14,0,"hljs-built_in"],[12],[2,"require"],[13],[2,"("],[10,"span"],[14,0,"hljs-string"],[12],[2,"\'electron\'"],[13],[2,");\\n"],[10,"span"],[14,0,"hljs-keyword"],[12],[2,"const"],[13],[2," { "],[10,"span"],[14,0,"hljs-attr"],[12],[2,"promises"],[13],[2,": { writeFile } } = "],[10,"span"],[14,0,"hljs-built_in"],[12],[2,"require"],[13],[2,"("],[10,"span"],[14,0,"hljs-string"],[12],[2,"\'fs\'"],[13],[2,");\\n"],[10,"span"],[14,0,"hljs-keyword"],[12],[2,"const"],[13],[2," { fileSync } = "],[10,"span"],[14,0,"hljs-built_in"],[12],[2,"require"],[13],[2,"("],[10,"span"],[14,0,"hljs-string"],[12],[2,"\'tmp\'"],[13],[2,");\\n"],[10,"span"],[14,0,"hljs-keyword"],[12],[2,"const"],[13],[2," IDBExportImport = "],[10,"span"],[14,0,"hljs-built_in"],[12],[2,"require"],[13],[2,"("],[10,"span"],[14,0,"hljs-string"],[12],[2,"\'indexeddb-export-import\'"],[13],[2,");\\n\\n"],[10,"span"],[14,0,"hljs-function"],[12],[10,"span"],[14,0,"hljs-keyword"],[12],[2,"function"],[13],[2," "],[10,"span"],[14,0,"hljs-title"],[12],[2,"needsMigration"],[13],[2,"("],[10,"span"],[14,0,"hljs-params"],[12],[13],[2,") "],[13],[2,"{\\n  "],[10,"span"],[14,0,"hljs-comment"],[12],[2,"// You\'ll want some way of determining if the migration has already happened,"],[13],[2,"\\n  "],[10,"span"],[14,0,"hljs-comment"],[12],[2,"// the when the app starts it doesn\'t always re-copy the data from the"],[13],[2,"\\n  "],[10,"span"],[14,0,"hljs-comment"],[12],[2,"// `serve://dist`-scoped, overwriting any changes the user has since made to"],[13],[2,"\\n  "],[10,"span"],[14,0,"hljs-comment"],[12],[2,"// the `file:`-scoped data. For example, you might use `electron-store` to"],[13],[2,"\\n  "],[10,"span"],[14,0,"hljs-comment"],[12],[2,"// keep track of whether you\'ve run the migration or not.  "],[13],[2,"\\n}\\n\\n"],[10,"span"],[14,0,"hljs-keyword"],[12],[2,"if"],[13],[2," (needsMigration()) {\\n  "],[10,"span"],[14,0,"hljs-comment"],[12],[2,"// Register the `serve:` scheme as privileged, like `electron-protocol-serve`"],[13],[2,"\\n  "],[10,"span"],[14,0,"hljs-comment"],[12],[2,"// does. This enables access to browser storage from pages loaded via the"],[13],[2,"\\n  "],[10,"span"],[14,0,"hljs-comment"],[12],[2,"// `serve:` protocol. This needs to be done before the app\'s `ready` event."],[13],[2,"\\n  protocol.registerSchemesAsPrivileged([\\n    {\\n      "],[10,"span"],[14,0,"hljs-attr"],[12],[2,"scheme"],[13],[2,": "],[10,"span"],[14,0,"hljs-string"],[12],[2,"\'serve\'"],[13],[2,",\\n      "],[10,"span"],[14,0,"hljs-attr"],[12],[2,"privileges"],[13],[2,": {\\n        "],[10,"span"],[14,0,"hljs-attr"],[12],[2,"secure"],[13],[2,": "],[10,"span"],[14,0,"hljs-literal"],[12],[2,"true"],[13],[2,",\\n        "],[10,"span"],[14,0,"hljs-attr"],[12],[2,"standard"],[13],[2,": "],[10,"span"],[14,0,"hljs-literal"],[12],[2,"true"],[13],[2,"\\n      }\\n    }\\n  ]);\\n\\n  app.on("],[10,"span"],[14,0,"hljs-string"],[12],[2,"\'ready\'"],[13],[2,", "],[10,"span"],[14,0,"hljs-keyword"],[12],[2,"async"],[13],[2," () => {\\n    "],[10,"span"],[14,0,"hljs-comment"],[12],[2,"// Set up a protocol handler to return empty HTML from any request to"],[13],[2,"\\n    "],[10,"span"],[14,0,"hljs-comment"],[12],[2,"// `serve:` URLs, so we can load `serve://dist` in a browser window and use"],[13],[2,"\\n    "],[10,"span"],[14,0,"hljs-comment"],[12],[2,"// it to access localStorage"],[13],[2,"\\n    protocol.registerStringProtocol("],[10,"span"],[14,0,"hljs-string"],[12],[2,"\'serve\'"],[13],[2,", "],[10,"span"],[14,0,"hljs-function"],[12],[2,"("],[10,"span"],[14,0,"hljs-params"],[12],[2,"request, callback"],[13],[2,") =>"],[13],[2," {\\n      callback({ "],[10,"span"],[14,0,"hljs-attr"],[12],[2,"mimeType"],[13],[2,": "],[10,"span"],[14,0,"hljs-string"],[12],[2,"\'text/html\'"],[13],[2,", "],[10,"span"],[14,0,"hljs-attr"],[12],[2,"data"],[13],[2,": "],[10,"span"],[14,0,"hljs-string"],[12],[2,"\'<html></html>\'"],[13],[2," });\\n    });\\n\\n    "],[10,"span"],[14,0,"hljs-comment"],[12],[2,"// Navigate to our empty page in a hidden browser window"],[13],[2,"\\n    "],[10,"span"],[14,0,"hljs-keyword"],[12],[2,"let"],[13],[2," "],[10,"span"],[14,0,"hljs-built_in"],[12],[2,"window"],[13],[2," = "],[10,"span"],[14,0,"hljs-keyword"],[12],[2,"new"],[13],[2," BrowserWindow({ "],[10,"span"],[14,0,"hljs-attr"],[12],[2,"show"],[13],[2,": "],[10,"span"],[14,0,"hljs-literal"],[12],[2,"false"],[13],[2," });\\n    "],[10,"span"],[14,0,"hljs-keyword"],[12],[2,"try"],[13],[2," {\\n      "],[10,"span"],[14,0,"hljs-keyword"],[12],[2,"await"],[13],[2," "],[10,"span"],[14,0,"hljs-built_in"],[12],[2,"window"],[13],[2,".loadURL("],[10,"span"],[14,0,"hljs-string"],[12],[2,"\'serve://dist\'"],[13],[2,");\\n\\n      "],[10,"span"],[14,0,"hljs-comment"],[12],[2,"// Export the existing IndexedDB data to a JSON string"],[13],[2,"\\n      "],[10,"span"],[14,0,"hljs-keyword"],[12],[2,"const"],[13],[2," jsonString = "],[10,"span"],[14,0,"hljs-keyword"],[12],[2,"await"],[13],[2," "],[10,"span"],[14,0,"hljs-built_in"],[12],[2,"window"],[13],[2,".webContents.executeJavaScript(\\n        "],[10,"span"],[14,0,"hljs-string"],[12],[2,"`\\n        "],[10,"span"],[14,0,"hljs-subst"],[12],[2,"${IDBExportImport.exportToJsonString.toString()}"],[13],[2,"\\n\\n        function getJsonForIndexedDb() {\\n          const DBOpenRequest = window.indexedDB.open(\'orbit\', 1);\\n\\n          return new Promise((resolve, reject) => {\\n            DBOpenRequest.onsuccess = () => {\\n              const idbDatabase = DBOpenRequest.result;\\n              exportToJsonString(idbDatabase, (err, jsonString) => {\\n                if (err) {\\n                  idbDatabase.close();\\n                  reject(err);\\n                } else {\\n                  idbDatabase.close();\\n                  resolve(jsonString);\\n                }\\n              });\\n            };\\n          });\\n        }\\n\\n        getJsonForIndexedDb();\\n        `"],[13],[2,"\\n      );\\n\\n      "],[10,"span"],[14,0,"hljs-comment"],[12],[2,"// Create an empty HTML file in a temporary location that we can load via a"],[13],[2,"\\n      "],[10,"span"],[14,0,"hljs-comment"],[12],[2,"// `file:` URL so we can write our values to the `file:`-scoped localStorage."],[13],[2,"\\n      "],[10,"span"],[14,0,"hljs-comment"],[12],[2,"// We don\'t do this with a protocol handler because we don\'t want to mess"],[13],[2,"\\n      "],[10,"span"],[14,0,"hljs-comment"],[12],[2,"// with how `file:` URLs are handled, as it could cause problems when we"],[13],[2,"\\n      "],[10,"span"],[14,0,"hljs-comment"],[12],[2,"// actually load Ember app over a `file:` URL."],[13],[2,"\\n      "],[10,"span"],[14,0,"hljs-keyword"],[12],[2,"let"],[13],[2," tempFile = fileSync();\\n      "],[10,"span"],[14,0,"hljs-keyword"],[12],[2,"await"],[13],[2," writeFile(tempFile.name, "],[10,"span"],[14,0,"hljs-string"],[12],[2,"\'<html></html>\'"],[13],[2,");\\n      "],[10,"span"],[14,0,"hljs-keyword"],[12],[2,"await"],[13],[2," "],[10,"span"],[14,0,"hljs-built_in"],[12],[2,"window"],[13],[2,".loadFile(tempFile.name);\\n\\n      "],[10,"span"],[14,0,"hljs-keyword"],[12],[2,"if"],[13],[2," (jsonString) {\\n        "],[10,"span"],[14,0,"hljs-comment"],[12],[2,"// Import the JSON backup into the new IndexedDB database"],[13],[2,"\\n        "],[10,"span"],[14,0,"hljs-keyword"],[12],[2,"await"],[13],[2," "],[10,"span"],[14,0,"hljs-built_in"],[12],[2,"window"],[13],[2,".webContents.executeJavaScript(\\n          "],[10,"span"],[14,0,"hljs-string"],[12],[2,"`\\n          "],[10,"span"],[14,0,"hljs-subst"],[12],[2,"${IDBExportImport.importFromJsonString.toString()}"],[13],[2,"\\n          "],[10,"span"],[14,0,"hljs-subst"],[12],[2,"${IDBExportImport.clearDatabase.toString()}"],[13],[2,"\\n          function restoreJsonForIndexedDb() {\\n            const DBOpenRequest = window.indexedDB.open(\'orbit\', 1);\\n            return new Promise((resolve, reject) => {\\n              DBOpenRequest.onsuccess = () => {\\n                const idbDatabase = DBOpenRequest.result;\\n                clearDatabase(idbDatabase, (err) => {\\n                  if (!err) {\\n                    // cleared data successfully\\n                    importFromJsonString(\\n                      idbDatabase,\\n                      \'"],[10,"span"],[14,0,"hljs-subst"],[12],[2,"${jsonString}"],[13],[2,"\',\\n                      (err) => {\\n                        if (!err) {\\n                          idbDatabase.close();\\n                          resolve();\\n                        } else {\\n                          reject(err);\\n                        }\\n                      }\\n                    );\\n                  } else {\\n                    reject(err);\\n                  }\\n                });\\n              };\\n            });\\n          }\\n          restoreJsonForIndexedDb();\\n        `"],[13],[2,"\\n        );\\n      }\\n    } "],[10,"span"],[14,0,"hljs-keyword"],[12],[2,"finally"],[13],[2," {\\n      "],[10,"span"],[14,0,"hljs-built_in"],[12],[2,"window"],[13],[2,".destroy();\\n    }\\n  });\\n}"],[13],[13],[2,"\\n\\n      "],[10,"h1"],[14,1,"upgrading-from-3-0-0-beta-2"],[14,0,"docs-md__h1"],[12],[2,"Upgrading from 3.0.0-beta.2"],[13],[2,"\\n    "],[10,"p"],[12],[2,"Between "],[10,"code"],[12],[2,"3.0.0-beta.2"],[13],[2," and "],[10,"code"],[12],[2,"3.0.0-beta.3"],[13],[2," we removed "],[10,"code"],[12],[2,"electron-protocol-serve"],[13],[2," from the default blueprint as explained "],[10,"a"],[14,6,"#electron-protocol-serve"],[14,0,"docs-md__a"],[12],[2,"here"],[13],[2,". The best way to upgrade from a "],[10,"code"],[12],[2,"3.0.0"],[13],[2," beta version before "],[10,"code"],[12],[2,"3.0.0-beta.3"],[13],[2," is to:"],[13],[2,"\\n\\n        "],[10,"ol"],[14,0,"docs-list-decimal"],[12],[10,"li"],[12],[2,"Start with a clean working tree (no uncommitted changes)"],[13],[2,"\\n"],[10,"li"],[12],[2,"Update "],[10,"code"],[12],[2,"ember-electron"],[13],[2," to the latest version"],[13],[2,"\\n"],[10,"li"],[12],[2,"Rerun the blueprint ("],[10,"code"],[12],[2,"ember g ember-electron"],[13],[2,") overwriting all files when prompted"],[13],[2,"\\n"],[10,"li"],[12],[2,"Look at the git diff and re-introduce any changes/customizations you previously made to the affected files"],[13],[2,"\\n"],[10,"li"],[12],[10,"code"],[12],[2,"cd electron-app && yarn remove electron-protocol-serve"],[13],[2," since "],[10,"code"],[12],[2,"electron-protocol-serve"],[13],[2," is no longer used"],[13],[2,"\\n"],[13],[2,"\\n      "],[10,"p"],[12],[2,"The changes you should end up with are:"],[13],[2,"\\n\\n        "],[10,"ul"],[14,0,"docs-list-disc"],[12],[10,"li"],[12],[2,"Modifications to the "],[10,"code"],[12],[2,"rootURL"],[13],[2," and "],[10,"code"],[12],[2,"locationType"],[13],[2," settings in "],[10,"code"],[12],[2,"config/environment.js"],[13],[13],[2,"\\n"],[10,"li"],[12],[2,"A new "],[10,"code"],[12],[2,"electron-app/src/handle-file-urls.js"],[13],[2," file"],[13],[2,"\\n"],[10,"li"],[12],[2,"Changes to "],[10,"code"],[12],[2,"electron-app/src/index.js"],[13],[2," and "],[10,"code"],[12],[2,"electron-app/tests/index.js"],[13],[2," to switch from "],[10,"code"],[12],[2,"electron-protocol-serve"],[13],[2," to "],[10,"code"],[12],[2,"file:"],[13],[2," URLs"],[13],[2,"\\n"],[10,"li"],[12],[2,"Removal of "],[10,"code"],[12],[2,"electron-protocol-serve"],[13],[2," from "],[10,"code"],[12],[2,"electron-app/package.json"],[13],[13],[2,"\\n"],[13],[2,"\\n      "],[10,"p"],[12],[2,"If your application uses any browser storage like "],[10,"code"],[12],[2,"localStorage"],[13],[2," or "],[10,"code"],[12],[2,"IndexedDB"],[13],[2,", you may need to migrate the data so it\'s accessible from "],[10,"code"],[12],[2,"file:"],[13],[2," URLs -- make sure to read the "],[10,"a"],[14,6,"#electron-protocol-serve"],[14,0,"docs-md__a"],[12],[2,"this"],[13],[2," section for more info."],[13],[2,"\\n"],[10,"p"],[12],[2,"You can read more about the removal of "],[10,"code"],[12],[2,"electron-protocol-serve"],[13],[2," and loading from "],[10,"code"],[12],[2,"file:"],[13],[2," URLs "],[10,"a"],[14,6,"../faq/routing-and-asset-loading"],[14,0,"docs-md__a"],[12],[2,"here"],[13],[2,"."],[13],[13]],"hasEval":false,"upvars":[]}',moduleName:"dummy/templates/docs/guides/upgrading.hbs"})
e.default=t})),define("dummy/templates/docs/guides/usage",["exports"],(function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=void 0
var t=Ember.HTMLBars.template({id:"yXzhzxOo",block:'{"symbols":[],"statements":[[10,"div"],[14,0,"docs-md"],[12],[10,"h1"],[14,1,"usage"],[14,0,"docs-md__h1"],[12],[2,"Usage"],[13],[2,"\\n    \\n      "],[10,"h2"],[14,1,"running-your-app"],[14,0,"docs-md__h2"],[12],[10,"a"],[14,6,"#running-your-app"],[14,0,"heading-anchor"],[12],[2,"Running Your App"],[13],[13],[2,"\\n    "],[10,"p"],[12],[2,"To run your app in development mode, run"],[13],[2,"\\n"],[10,"pre"],[14,0,"docs-md__code"],[12],[10,"code"],[14,0,"undefinedsh"],[12],[2,"ember electron"],[13],[13],[2,"\\n"],[10,"p"],[12],[2,"This is the equivalent of "],[10,"code"],[12],[2,"ember serve"],[13],[2," -- it defaults to building for the development environment, and live reloads when you make changes to your Ember app (but not your "],[10,"code"],[12],[2,"electron-forge"],[13],[2," project files -- see "],[10,"a"],[14,6,"../faq/common-issues#why-doesnt-my-application-reload-when-i-change-electron-forge-project-files-"],[14,0,"docs-md__a"],[12],[2,"Common Issues"],[13],[2,"). It supports many of the same parameters as "],[10,"code"],[12],[2,"ember serve"],[13],[2," does -- run "],[10,"code"],[12],[2,"ember help electron"],[13],[2," to see them all."],[13],[2,"\\n\\n      "],[10,"h2"],[14,1,"running-tests"],[14,0,"docs-md__h2"],[12],[10,"a"],[14,6,"#running-tests"],[14,0,"heading-anchor"],[12],[2,"Running Tests"],[13],[13],[2,"\\n    "],[10,"p"],[12],[2,"To test your app, run"],[13],[2,"\\n"],[10,"pre"],[14,0,"docs-md__code"],[12],[10,"code"],[14,0,"undefinedsh"],[12],[2,"ember electron:test"],[13],[13],[2,"\\n"],[10,"p"],[12],[2,"or"],[13],[2,"\\n"],[10,"pre"],[14,0,"docs-md__code"],[12],[10,"code"],[14,0,"undefinedsh"],[12],[2,"ember electron:test --server"],[13],[13],[2,"\\n"],[10,"p"],[12],[2,"to run in live-reload mode. It supports many of the same parameters as "],[10,"code"],[12],[2,"ember test"],[13],[2," does -- run "],[10,"code"],[12],[2,"ember help electron:test"],[13],[2," to see them all."],[13],[2,"\\n\\n      "],[10,"h2"],[14,1,"packaging-your-app-for-distribution"],[14,0,"docs-md__h2"],[12],[10,"a"],[14,6,"#packaging-your-app-for-distribution"],[14,0,"heading-anchor"],[12],[2,"Packaging Your App for Distribution"],[13],[13],[2,"\\n    \\n      "],[10,"h3"],[14,1,"configuration"],[14,0,"docs-md__h3"],[12],[10,"a"],[14,6,"#configuration"],[14,0,"heading-anchor"],[12],[2,"Configuration"],[13],[13],[2,"\\n    "],[10,"p"],[12],[2,"The process of packaging an application for distribution involves quite a bit of configuration. "],[10,"code"],[12],[2,"ember-electron"],[13],[2,"\'s installation blueprint will set you up with some defaults to get you started, but you will likely want to customize the configuration at some point. In "],[10,"code"],[12],[2,"electron-app/package.json"],[13],[2," you\'ll see"],[13],[2,"\\n"],[10,"pre"],[14,0,"docs-md__code"],[12],[10,"code"],[12],[2,"\\"config\\": {\\n  \\"forge\\": {\\n    \\"packagerConfig\\": {},\\n    \\"makers\\": [\\n      ...\\n    ]\\n  }\\n}"],[13],[13],[10,"p"],[12],[2,"This configuration is read directly by "],[10,"code"],[12],[2,"electron-forge"],[13],[2,", so you should use its "],[10,"a"],[14,6,"https://www.electronforge.io/configuration"],[14,0,"docs-md__a"],[12],[2,"documentation"],[13],[2," as reference."],[13],[2,"\\n\\n      "],[10,"h3"],[14,1,"making"],[14,0,"docs-md__h3"],[12],[10,"a"],[14,6,"#making"],[14,0,"heading-anchor"],[12],[2,"Making"],[13],[13],[2,"\\n    "],[10,"p"],[12],[2,"To make installers for your application that you can distribute, run"],[13],[2,"\\n"],[10,"pre"],[14,0,"docs-md__code"],[12],[10,"code"],[14,0,"undefinedsh"],[12],[2,"ember electron:make"],[13],[13],[2,"\\n"],[10,"p"],[12],[2,"This is a thin wrapper around "],[10,"a"],[14,6,"https://www.electronforge.io/cli#make"],[14,0,"docs-md__a"],[12],[2,"electron-forge make"],[13],[2,". It will build out the installers specified by the "],[10,"code"],[12],[2,"makers"],[13],[2," array in your forge config and place them in "],[10,"code"],[12],[2,"electron-app/out"],[13],[2,". Various command-line arguments can customize the platform you are building for, the make targets to build, and allow you to reuse already-built content to speed things up, e.g., in CI -- run "],[10,"code"],[12],[2,"ember help electron:make"],[13],[2," to see them all."],[13],[2,"\\n\\n      "],[10,"h3"],[14,1,"packaging"],[14,0,"docs-md__h3"],[12],[10,"a"],[14,6,"#packaging"],[14,0,"heading-anchor"],[12],[2,"Packaging"],[13],[13],[2,"\\n    "],[10,"p"],[12],[2,"To package your application into a platform specific executable format, run"],[13],[2,"\\n"],[10,"pre"],[14,0,"docs-md__code"],[12],[10,"code"],[14,0,"undefinedsh"],[12],[2,"ember electron:package"],[13],[13],[2,"\\n"],[10,"p"],[12],[2,"This is a thin wrapper around "],[10,"a"],[14,6,"https://www.electronforge.io/cli#package"],[14,0,"docs-md__a"],[12],[2,"electron-forge package"],[13],[2,". It will produce the same result you would get by running "],[10,"code"],[12],[2,"ember electron:make"],[13],[2," and then installing one of the installers, so is a good way to run your application under the same conditions that end-users will run it, rather than in a development environment. It will place the result in "],[10,"code"],[12],[2,"electron-app/out"],[13],[2,". Various command-line arguments can customize the platform you are building for, and allow you to reuse an already-built Ember app to speed things up, e.g., in CI -- run "],[10,"code"],[12],[2,"ember help electron:package"],[13],[2," to see them all."],[13],[13]],"hasEval":false,"upvars":[]}',moduleName:"dummy/templates/docs/guides/usage.hbs"})
e.default=t})),define("dummy/templates/docs/index",["exports"],(function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=void 0
var t=Ember.HTMLBars.template({id:"HdodkPTH",block:'{"symbols":[],"statements":[[10,"div"],[14,0,"docs-md"],[12],[10,"p"],[14,"align","center"],[12],[10,"img"],[14,"src","https://raw.githubusercontent.com/adopted-ember-addons/ember-electron/gh-pages/img/logo-github%402x.png"],[14,"alt","Ember-Electron logo showing an electron orbiting a flame"],[14,"width","300"],[14,"height","250"],[12],[13],[13],[2,"\\n\\n\\n      "],[10,"h1"],[14,1,"ember-electron"],[14,0,"docs-md__h1"],[12],[2,"Ember-Electron"],[13],[2,"\\n    "],[10,"p"],[12],[10,"img"],[14,"src","https://img.shields.io/npm/v/ember-electron.svg"],[14,"alt","Latest release on NPM"],[12],[13],[2," \\n"],[10,"a"],[14,6,"https://ci.appveyor.com/project/rwwagner90/ember-electron"],[14,0,"docs-md__a"],[12],[10,"img"],[14,"src","https://ci.appveyor.com/api/projects/status/5rhwhar361uad07v?svg=true"],[14,"alt","Appveyor Build status"],[12],[13],[13],[2,"\\n"],[10,"img"],[14,"src","https://secure.travis-ci.org/adopted-ember-addons/ember-electron.svg?branch=master"],[14,"alt","Travis CI Build Status"],[12],[13],[13],[2,"\\n"],[10,"p"],[12],[2,"An Ember addon to turn Ember apps into cross-platform desktop applications, taking care of development, tests, compilation, and installer creation."],[13],[2,"\\n\\n        "],[10,"ul"],[14,0,"docs-list-disc"],[12],[10,"li"],[12],[10,"code"],[12],[2,"ember electron"],[13],[2," - Run app in Electron with live-reload server"],[13],[2,"\\n"],[10,"li"],[12],[10,"code"],[12],[2,"ember electron:test"],[13],[2," - Test the app using Electron"],[13],[2,"\\n"],[10,"li"],[12],[10,"code"],[12],[2,"ember electron:test --server"],[13],[2," - Test with Electron in development server mode"],[13],[2,"\\n"],[10,"li"],[12],[10,"code"],[12],[2,"ember electron:package"],[13],[2," - Create binaries (.app, .exe, etc)"],[13],[2,"\\n"],[10,"li"],[12],[10,"code"],[12],[2,"ember electron:make"],[13],[2," - Generate platform specific distributables (installers, distribution packages, etc)"],[13],[2,"\\n"],[10,"li"],[12],[10,"code"],[12],[2,"ember electron:build"],[13],[2," - Build out Ember app with Electron instrumentation (useful for optimizing multi-platform builds)"],[13],[2,"\\n"],[13],[2,"\\n      "],[10,"p"],[12],[2,"To see a real world example, check out "],[10,"a"],[14,6,"https://github.com/tryghost/Ghost-Desktop"],[14,0,"docs-md__a"],[12],[2,"Ghost Desktop"],[13],[2,"."],[13],[2,"\\n\\n      "],[10,"h2"],[14,1,"support"],[14,0,"docs-md__h2"],[12],[10,"a"],[14,6,"#support"],[14,0,"heading-anchor"],[12],[2,"Support"],[13],[13],[2,"\\n    "],[10,"p"],[12],[2,"Ember-Electron is a small open source project. Use "],[10,"a"],[14,6,"https://github.com/adopted-ember-addons/ember-electron/issues"],[14,0,"docs-md__a"],[12],[2,"GitHub Issues"],[13],[2," to report bugs and errors within the addon."],[13],[2,"\\n"],[10,"p"],[12],[2,"If you need help "],[10,"em"],[12],[2,"using"],[13],[2," the addon with your application, may we recommend the excellent Ember community? You can check out the "],[10,"a"],[14,6,"https://www.emberjs.com/community/"],[14,0,"docs-md__a"],[12],[2,"various places to get help here"],[13],[2,". In particular, the "],[10,"a"],[14,6,"https://discordapp.com/invite/emberjs"],[14,0,"docs-md__a"],[12],[2,"Ember community Discord"],[13],[2," has a "],[10,"code"],[12],[2,"#topic-desktop"],[13],[2," channel which is a great place to ask questions about "],[10,"code"],[12],[2,"ember-electron"],[13],[2,". If you have questions regarding Electron, their "],[10,"a"],[14,6,"https://electron.atom.io/contact/"],[14,0,"docs-md__a"],[12],[2,"Slack and forum"],[13],[2," will be helpful as well."],[13],[2,"\\n\\n      "],[10,"h2"],[14,1,"authors"],[14,0,"docs-md__h2"],[12],[10,"a"],[14,6,"#authors"],[14,0,"heading-anchor"],[12],[2,"Authors"],[13],[13],[2,"\\n    "],[10,"p"],[12],[2,"Ember-Electron builds on prior work done by @brzpegasus (author of "],[10,"a"],[14,6,"https://github.com/brzpegasus/ember-cli-nwjs"],[14,0,"docs-md__a"],[12],[10,"code"],[12],[2,"ember-cli-nwjs"],[13],[13],[2,") and @joostdevries (author of "],[10,"a"],[14,6,"https://github.com/joostdevries/ember-cli-remote-inspector"],[14,0,"docs-md__a"],[12],[10,"code"],[12],[2,"ember-cli-remote-inspector"],[13],[13],[2,"). Our gratitude to both of them for their amazing work."],[13],[2,"\\n\\n        "],[10,"ul"],[14,0,"docs-list-disc"],[12],[10,"li"],[12],[2,"Felix Rieseberg ("],[10,"a"],[14,6,"https://github.com/felixrieseberg"],[14,0,"docs-md__a"],[12],[2,"@felixrieseberg"],[13],[2,")"],[13],[2,"\\n"],[10,"li"],[12],[2,"Aidan Nulman ("],[10,"a"],[14,6,"https://github.com/anulman"],[14,0,"docs-md__a"],[12],[2,"@anulman"],[13],[2,")"],[13],[2,"\\n"],[10,"li"],[12],[2,"Florian Pichler ("],[10,"a"],[14,6,"https://github.com/pichfl"],[14,0,"docs-md__a"],[12],[2,"@pichfl"],[13],[2,")"],[13],[2,"\\n"],[10,"li"],[12],[2,"Ben Demboski ("],[10,"a"],[14,6,"https://github.com/bendemboski"],[14,0,"docs-md__a"],[12],[2,"@bendemboski"],[13],[2,")"],[13],[2,"\\n"],[10,"li"],[12],[10,"a"],[14,6,"https://github.com/adopted-ember-addons/ember-electron/graphs/contributors"],[14,0,"docs-md__a"],[12],[2,"...and many other contributors"],[13],[13],[2,"\\n"],[13],[13]],"hasEval":false,"upvars":[]}',moduleName:"dummy/templates/docs/index.hbs"})
e.default=t})),define("dummy/templates/index",["exports"],(function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=void 0
var t=Ember.HTMLBars.template({id:"Mu7lK0NA",block:'{"symbols":[],"statements":[[10,"div"],[14,0,"old-index-page"],[12],[2,"\\n  "],[10,"header"],[14,0,"top"],[12],[2,"\\n    "],[10,"div"],[12],[2,"\\n      "],[10,"a"],[14,6,""],[14,0,"logo"],[12],[2,"\\n        "],[10,"img"],[14,"alt","Ember Electron Logo"],[14,"src","img/logo@2x.png"],[14,"height","80"],[14,"width","100"],[12],[13],[2,"\\n        "],[10,"h1"],[12],[2,"Ember Electron"],[13],[2,"\\n      "],[13],[2,"\\n\\n      "],[10,"div"],[14,0,"badge"],[12],[2,"\\n        "],[10,"a"],[14,0,"github-button"],[14,6,"https://github.com/adopted-ember-addons/ember-electron"],[14,"data-icon","octicon-star"],[14,"data-style","mega"],[14,"data-count-href","/adopted-ember-addons/ember-electron/stargazers"],[14,"data-count-api","/repos/adopted-ember-addons/ember-electron#stargazers_count"],[14,"data-count-aria-label","# stargazers on GitHub"],[14,"aria-label","Star adopted-ember-addons/ember-electron on GitHub"],[12],[2,"\\n          Star\\n        "],[13],[2,"\\n      "],[13],[2,"\\n\\n      "],[10,"h2"],[12],[2,"\\n        "],[10,"span"],[12],[2,"The addon for creating ambitious"],[13],[2," "],[10,"span"],[12],[2,"cross platform desktop apps."],[13],[2,"\\n      "],[13],[2,"\\n\\n      "],[10,"h3"],[14,0,"quickstart"],[12],[2,"\\n        Start with any Ember.js project\\n      "],[13],[2,"\\n      "],[10,"p"],[12],[10,"code"],[12],[2,"ember install ember-electron"],[13],[13],[2,"\\n    "],[13],[2,"\\n\\n    "],[10,"nav"],[12],[2,"\\n      "],[10,"a"],[14,0,"btn"],[14,6,"docs"],[12],[2,"Documentation"],[13],[2,"\\n      "],[10,"a"],[14,0,"btn"],[14,6,"https://github.com/felixrieseberg/ember-electron"],[12],[2,"GitHub"],[13],[2,"\\n    "],[13],[2,"\\n\\n    "],[10,"svg"],[14,0,"swoosh"],[14,"xmlns","http://www.w3.org/2000/svg","http://www.w3.org/2000/xmlns/"],[14,"viewBox","0 0 1200 100"],[14,"preserveAspectRatio","none"],[12],[2,"\\n      "],[10,"path"],[14,"fill","#F7F8FA"],[14,"fill-rule","evenodd"],[14,"d","M1200 100H0V37s213 31 465 31c453.3 0 716.92-53.95 735-57.79V100z"],[12],[13],[2,"\\n    "],[13],[2,"\\n  "],[13],[2,"\\n\\n  "],[10,"section"],[14,0,"page"],[12],[2,"\\n    "],[10,"div"],[14,0,"intro"],[12],[2,"\\n      "],[10,"p"],[12],[2,"\\n        Extend any Ember.js application with the access and options of a full sized desktop application in minutes. Ember-Electron is powered by\\n        "],[10,"a"],[14,6,"https://github.com/electron-userland/electron-forge"],[14,"rel","noopener noreferrer"],[14,"target","_blank"],[12],[2,"electron-forge"],[13],[2," and provides all the tooling neccessary\\n        to build, test and\\n        ship your application.\\n      "],[13],[2,"\\n    "],[13],[2,"\\n\\n    "],[10,"div"],[12],[2,"\\n      "],[10,"h2"],[12],[2,"\\n        Getting started\\n      "],[13],[2,"\\n\\n      "],[10,"p"],[12],[2,"\\n        After installing the addon, you will find a new folder "],[10,"code"],[12],[2,"ember-electron"],[13],[2," inside your Ember project root. All code required to run an Electron\\n        project will be there.\\n      "],[13],[2,"\\n    "],[13],[2,"\\n\\n    "],[10,"div"],[14,0,"commands"],[12],[2,"\\n      "],[10,"h3"],[12],[2,"\\n        "],[10,"code"],[12],[2,"ember electron"],[13],[2,"\\n      "],[13],[2,"\\n\\n      "],[10,"p"],[12],[2,"\\n        Run your project in development mode. This works pretty much like ember serve except it runs in Electron. We install the Ember Inspector and Devtron\\n        for\\n        you, so just use the Developer Tools as you would in your browser. Please note that we do not restart Electron yet when you change code there.\\n      "],[13],[2,"\\n\\n      "],[10,"h3"],[12],[2,"\\n        "],[10,"code"],[12],[2,"ember electron:test"],[13],[2,"\\n      "],[13],[2,"\\n\\n      "],[10,"p"],[12],[2,"\\n        Test your app in Electron. Supports live reloading using the "],[10,"code"],[12],[2,"--server"],[13],[2," flag.\\n      "],[13],[2,"\\n\\n      "],[10,"h3"],[12],[2,"\\n        "],[10,"code"],[12],[2,"ember electron:package"],[13],[2,"\\n      "],[13],[2,"\\n\\n      "],[10,"p"],[12],[2,"\\n        Creates binaries or your app using electron-forge and electron-packager in the background. Options can be specified in "],[10,"code"],[12],[2,"ember-electron/electron-forge-config.js"],[13],[2,".\\n      "],[13],[2,"\\n\\n      "],[10,"h3"],[12],[2,"\\n        "],[10,"code"],[12],[2,"ember electron:make"],[13],[2,"\\n      "],[13],[2,"\\n\\n      "],[10,"p"],[12],[2,"\\n        Creates installers and distribution bundles. For Windows, that means a Squirrel Installer and a Windows Store Package; for macOS, zip/dmg files and a\\n        Mac App Store Package, while Linux users enjoy the creation of deb, rpm, and flatpak files. Again, options can be specified in "],[10,"code"],[12],[2,"ember-electron/electron-forge-config.js"],[13],[2,".\\n      "],[13],[2,"\\n\\n      "],[10,"h3"],[12],[2,"\\n        "],[10,"code"],[12],[2,"ember electron:assemble"],[13],[2,"\\n      "],[13],[2,"\\n\\n      "],[10,"p"],[12],[2,"\\n        Assemble Electron application project (useful for debugging builds). For more information, check out the guide\\n        "],[10,"a"],[14,6,"docs/guides/build-pipeline"],[12],[2,"on the build pipeline"],[13],[2,".\\n      "],[13],[2,"\\n    "],[13],[2,"\\n\\n    "],[10,"nav"],[12],[2,"\\n      "],[10,"a"],[14,0,"btn"],[14,6,"docs"],[12],[2,"Documentation"],[13],[2,"\\n      "],[10,"a"],[14,0,"btn"],[14,6,"https://github.com/felixrieseberg/ember-electron"],[12],[2,"GitHub"],[13],[2,"\\n    "],[13],[2,"\\n\\n    "],[10,"svg"],[14,0,"swoosh"],[14,"xmlns","http://www.w3.org/2000/svg","http://www.w3.org/2000/xmlns/"],[14,"viewBox","0 0 1200 100"],[14,"preserveAspectRatio","none"],[12],[2,"\\n      "],[10,"path"],[14,"fill","#EAECF3"],[14,"fill-rule","evenodd"],[14,"d","M0 100h1200V37S987 68 735 68C281.7 68 18.08 14.05 0 10.21V100z"],[12],[13],[2,"\\n    "],[13],[2,"\\n  "],[13],[2,"\\n\\n  "],[10,"footer"],[14,0,"end"],[12],[2,"\\n    "],[10,"div"],[12],[2,"\\n      "],[10,"p"],[12],[2,"\\n        © 2015 – Felix Rieseberg. With help from Aidan Nulman, Ben Demboski, Florian Pichler and many others.\\n      "],[13],[2,"\\n    "],[13],[2,"\\n  "],[13],[2,"\\n"],[13]],"hasEval":false,"upvars":[]}',moduleName:"dummy/templates/index.hbs"})
e.default=t})),define("dummy/transforms/boolean",["exports","@ember-data/serializer/-private"],(function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),Object.defineProperty(e,"default",{enumerable:!0,get:function(){return t.BooleanTransform}})})),define("dummy/transforms/date",["exports","@ember-data/serializer/-private"],(function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),Object.defineProperty(e,"default",{enumerable:!0,get:function(){return t.DateTransform}})})),define("dummy/transforms/number",["exports","@ember-data/serializer/-private"],(function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),Object.defineProperty(e,"default",{enumerable:!0,get:function(){return t.NumberTransform}})})),define("dummy/transforms/string",["exports","@ember-data/serializer/-private"],(function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),Object.defineProperty(e,"default",{enumerable:!0,get:function(){return t.StringTransform}})})),define("dummy/transitions",["exports"],(function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=function(){this.transition(this.hasClass("modal-fade-and-drop"),this.use("fadeAndDrop")),this.transition(this.hasClass("modal-fade"),this.use("fade",{duration:150}))}})),define("dummy/transitions/cross-fade",["exports","liquid-fire/transitions/cross-fade"],(function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),Object.defineProperty(e,"default",{enumerable:!0,get:function(){return t.default}})})),define("dummy/transitions/default",["exports","liquid-fire/transitions/default"],(function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),Object.defineProperty(e,"default",{enumerable:!0,get:function(){return t.default}})})),define("dummy/transitions/explode",["exports","liquid-fire/transitions/explode"],(function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),Object.defineProperty(e,"default",{enumerable:!0,get:function(){return t.default}})})),define("dummy/transitions/fade-and-drop",["exports","ember-cli-addon-docs/transitions/fade-and-drop"],(function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),Object.defineProperty(e,"default",{enumerable:!0,get:function(){return t.default}})})),define("dummy/transitions/fade",["exports","liquid-fire/transitions/fade"],(function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),Object.defineProperty(e,"default",{enumerable:!0,get:function(){return t.default}})})),define("dummy/transitions/flex-grow",["exports","liquid-fire/transitions/flex-grow"],(function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),Object.defineProperty(e,"default",{enumerable:!0,get:function(){return t.default}})})),define("dummy/transitions/fly-to",["exports","liquid-fire/transitions/fly-to"],(function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),Object.defineProperty(e,"default",{enumerable:!0,get:function(){return t.default}})})),define("dummy/transitions/move-over",["exports","liquid-fire/transitions/move-over"],(function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),Object.defineProperty(e,"default",{enumerable:!0,get:function(){return t.default}})})),define("dummy/transitions/scale",["exports","liquid-fire/transitions/scale"],(function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),Object.defineProperty(e,"default",{enumerable:!0,get:function(){return t.default}})})),define("dummy/transitions/scroll-then",["exports","liquid-fire/transitions/scroll-then"],(function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),Object.defineProperty(e,"default",{enumerable:!0,get:function(){return t.default}})})),define("dummy/transitions/to-down",["exports","liquid-fire/transitions/to-down"],(function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),Object.defineProperty(e,"default",{enumerable:!0,get:function(){return t.default}})})),define("dummy/transitions/to-left",["exports","liquid-fire/transitions/to-left"],(function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),Object.defineProperty(e,"default",{enumerable:!0,get:function(){return t.default}})})),define("dummy/transitions/to-right",["exports","liquid-fire/transitions/to-right"],(function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),Object.defineProperty(e,"default",{enumerable:!0,get:function(){return t.default}})})),define("dummy/transitions/to-up",["exports","liquid-fire/transitions/to-up"],(function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),Object.defineProperty(e,"default",{enumerable:!0,get:function(){return t.default}})}))
define("dummy/transitions/wait",["exports","liquid-fire/transitions/wait"],(function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),Object.defineProperty(e,"default",{enumerable:!0,get:function(){return t.default}})})),define("dummy/utils/titleize",["exports","ember-cli-string-helpers/utils/titleize"],(function(e,t){Object.defineProperty(e,"__esModule",{value:!0}),Object.defineProperty(e,"default",{enumerable:!0,get:function(){return t.default}})})),define("dummy/config/environment",[],(function(){try{var e="dummy/config/environment",t=document.querySelector('meta[name="'+e+'"]').getAttribute("content"),n={default:JSON.parse(decodeURIComponent(t))}
return Object.defineProperty(n,"__esModule",{value:!0}),n}catch(o){throw new Error('Could not read config from meta tag with name "'+e+'".')}})),runningTests||require("dummy/app").default.create({})
