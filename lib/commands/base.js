'use strict';

const Command = require('ember-cli/lib/models/command');
const ElectronTask = require('../tasks/electron');
const ElectronMakeTask = require('../tasks/make');
const ElectronPackageTask = require('../tasks/package');
const YarnOrNpmTask = require('../tasks/yarn-or-npm');
const Win = require('ember-cli/lib/utilities/windows-admin');
const fs = require('fs');
const { electronProjectPath } = require('../utils/build-paths');
const { upgradingUrl } = require('../utils/documentation-urls');
const SilentError = require('silent-error');

module.exports = Command.extend({
  init() {
    this._super(...arguments);
    Object.assign(this.tasks, {
      'Electron': ElectronTask,
      'ElectronMake': ElectronMakeTask,
      'ElectronPackage': ElectronPackageTask,
      'YarnOrNpm': YarnOrNpmTask
    });
  },

  async prepareRun() {
    if (!fs.existsSync(electronProjectPath)) {
      return Promise.reject(
        new SilentError([
          `No './${electronProjectPath}' folder found. This folder must exist and`,
          `contain an electron-forge project. It should have been generated by`,
          `ember-electron's blueprint when you first ran 'ember install`,
          `ember-electron'. If you are upgrading from ember-electron v2, you`,
          `should read the upgrading documentation at ${upgradingUrl}.`,
        ].join(' '))
      );
    }

    // Set up the yarn/npm environment variable so forge uses the right package
    // manager
    await this.runTask('YarnOrNpm');

    // Tell our addon that we're building for electron, so it should inject
    // shims, etc.
    process.env.EMBER_CLI_ELECTRON = true;

    await Win.checkIfSymlinksNeedToBeEnabled(this.ui);
  }
});
